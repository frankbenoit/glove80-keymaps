{
  "keyboard": "glove80",
  "uuid": "",
  "date": 1709061886,
  "creator": "",
  "parent_uuid": "86e4e46a-032a-499e-9a2c-ad579bbe108b",
  "firmware_api_version": "1",
  "locale": "en-US",
  "title": "Glorious Engrammer v35 4",
  "notes": "system layer for symbols\n\nSunaku's Keymap v35 for the \"Glorious Engrammer\" 🧑‍🚀🚀✨\n- Intro & setup: https://github.com/sunaku/glove80-keymaps\n- Release notes: https://github.com/sunaku/glove80-keymaps/releases/tag/v35\n- Documentation: https://sunaku.github.io/moergo-glove80-keyboard.html#layers\n- Discord forum: #glorious-engrammer channel in https://www.moergo.com/discord\n\nSummary:\nThis release adds one-shot shift keys for capitalization, fixes build errors when users delete unwanted layers, adds a quick toggle for Gaming/Base layer, improves the Base/Symbol/Number/Cursor layers' layouts, makes the configuration more human readable & user friendly, and much more!\n\nChanges:\n- OPERATING_SYSTEM: use character codes instead of integers: Linux is now 'L' instead of 1; macOS is 'M'; Windows is 'W'.\n- `EMOJI_*_PRESET`: use character codes instead of integers: Neutral is 'N' instead of 0, etc.  Use neutral for defaults.\n- ENFORCE_BILATERAL: when disabled, fix build errors on user deletion of bilateral combinations layers such as LeftPinky.\n- Removed `&cappy` behavior in favor of separate `&caps_word` and CAPSLOCK (at the same spot on the Function layer) keys.\n- Removed `#define ENABLE_KEY_REPEAT` setting (it's now enabled by default) and fixed a corner case where it wasn't being applied to the index finger home row mods.\n- Home row mods: increase `INDEX_STREAK_DECAY` from 100ms to 150ms to avoid unwanted capitalization due to lingering holds on index shift keys: \"start\" => \"stRT\"\n- Home row mods: increase `HOMEY_STREAK_DECAY` from 230ms to 250ms to avoid unwanted mods activation when using Vim inside tmux in the terminal: \"`<ESC>`w\" => Alt+W\n- One-shot shifts: the Lower keys now produce sticky Shift modifiers when tapped.  Thanks to ~kivarr on Discord for inspiring this feature.\n- Base layer: change order of thumb arrow keys to accommodate one-handed Up (shell history) and Right (shell completion) on the right hand.  Thanks to ~ErrorCode on Discord for suggesting this.\n- Cursor layer: adjust Alt/Win+Tab to support macOS shortcuts (window switching is done by Cmd+Tab, not Alt+Tab, in macOS).  Thanks to ~mrjamerjamer on Discord for reporting this issue.\n- Cursor layer: rearrange text selection and Find operators on left hand to match the arrangement of their counterparts in Number layer.\n- Number layer: rearrange Spacegram operators (I naturally seem to want backspace under the index finger); add text selection operators.\n- Symbol layer: swap `~` TILDE and `@` AT, making the latter easier to reach and the former a bit more comfortable for typing `~/` home.\n- Number layer: swap `~` TILDE and `@` AT, for better affinity with Symbol layer and to make `~` approximation feel a bit more outlandish.\n- Number layer: swap `#` HASH and `$` DOLLAR, to mirror the `!@#$` standard number row shifted symbol sequence as `$#@!` on the right hand.\n- Number layer: add optional `#define USE_NUMPAD_KEYCODES` setting to use `KP_*` numeric keypad keycodes instead of their standard versions.  Thanks to ~ErrorCode on Discord for requesting this.\n- Number layer: overlay Alt+tab chord from Cursor layer to remove race condition on Cursor layer having to come first to trigger the Alt+Tab.\n- Engram layout: fix custom shifting for COMMA & DOT in bilateral combinations layers.  Thanks to ~MajorAngst on Discord for reporting this issue.\n- Gaming layer: add T3+T6 combo to toggle the gaming layer, for quickly switching to the base layer to type a message and then back to gaming again.  Thanks to ~jeremy on Discord for inspiring this feature.\n- Alpha layouts: fix build errors when user deletes alpha layout layers.  Thanks to ~unclenick6765 on Discord for reporting this issue.\n- Alpha layouts: add ColemakDHm, Norman, Halmak layouts to use all 32 layers and welcome even more users to this keymap.",
  "tags": [
    "sunaku",
    "miryoku",
    "home-row-mods",
    "symbol-layer",
    "programming",
    "vim",
    "gaming",
    "engrammer",
    "engram",
    "dvorak",
    "colemak",
    "colemak-dh",
    "qwerty",
    "norman",
    "workman",
    "halmak"
  ],
  "unlisted": false,
  "layer_names": [
    "Engrammer",
    "Engram",
    "Dvorak",
    "ColemakDHm",
    "Colemak",
    "QWERTY",
    "Norman",
    "Workman",
    "Halmak",
    "Typing",
    "LeftPinky",
    "LeftRing1",
    "LeftRing2",
    "LeftMiddy",
    "LeftIndex",
    "RightPinky",
    "RightRing1",
    "RightRing2",
    "RightMiddy",
    "RightIndex",
    "Number",
    "Cursor",
    "Function",
    "Emoji",
    "Symbol",
    "Mouse",
    "System",
    "World",
    "Gaming",
    "Factory",
    "Lower",
    "Magic"
  ],
  "layers": [
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (Y, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (W, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (C, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (I, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (E, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (A, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing DOT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (H, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (T, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (S, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (N, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function _C(BACKSPACE)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji _C(BACKSPACE)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_parang_left LAYER_World 0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N7",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N8",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N9",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_AT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (Y, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_SQT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_DQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (W, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (C, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (I, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (E, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (A, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain_engram_COMMA LAYER_Typing 0",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain_engram_DOT LAYER_Typing 0",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (H, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (T, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (S, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (N, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_QMARK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_parang_left LAYER_World 0",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_HASH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (COMMA, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (R, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SLASH",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (O, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (E, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (U, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing I",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing D",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (H, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (T, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (N, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (S, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_parang_left LAYER_World 0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (W, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (Y, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (R, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (S, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (T, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing G",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing M",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (N, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (E, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (I, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (O, LAYER_ColemakDHm)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_parang_left LAYER_World 0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (W, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (Y, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (R, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (S, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (T, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing D",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing H",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (N, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (E, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (I, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (O, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_parang_left LAYER_World 0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (W, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (O, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (S, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (D, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (F, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing G",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing H",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (J, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (K, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (L, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (SEMI, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_parang_left LAYER_World 0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (W, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (L, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (S, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (E, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (T, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing G",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing Y",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (N, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (I, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (O, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (H, LAYER_Norman)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_parang_left LAYER_World 0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (D, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (P, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (S, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (H, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (T, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing G",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing Y",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (N, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (E, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (O, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (I, LAYER_Workman)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_parang_left LAYER_World 0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (L, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (D, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (S, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (H, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (N, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (T, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing DOT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (A, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (E, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (O, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (I, LAYER_Halmak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_lower_shift LAYER_Lower LSFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_parang_left LAYER_World 0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_LH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_RH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_LH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_LH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_RH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_RH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyRing1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1Ring2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1Pinky",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1Middy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1Index",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2Pinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2Ring1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2Middy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2Index",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyRing1",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexRing1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyRing1",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1Ring2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1Index",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1Middy",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1Pinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2Index",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2Middy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2Ring1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2Pinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyRing1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPlainKey",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexRing1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UNDER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CARET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DLLR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PIPE",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRCNT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N7",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N8",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COLON",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _UNDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(A)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_ASTERISK",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_SLASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _REDO",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mod_tab_chord _A_TAB LAYER_Cursor",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Number",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_DOT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _KP_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(K)",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _REDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _UNDO",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _CUT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _CUT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _UNDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _REDO",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(K)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(L)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _COPY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _COPY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(L)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(J)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(A)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _PASTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mod_tab LCTL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mod_tab _G_TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_none",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _PASTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(J)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(H)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mod_tab _A_TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Cursor",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(A)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(BACKSPACE)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(H)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "DOT",
                "params": []
              }
            ]
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MEDIA_HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PLAY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_STOP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_EJECT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_WWW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F13",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_CALC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F14",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_AL_FILES",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F15",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Function",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MUTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_MAX",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_MIN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_AUTO",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cloudy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_mostly_cloudy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_partly_cloudy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_mostly_sunny",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sunny",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_new_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_moon_crescent",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_moon_quarter",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_moon_gibbous",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_full_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_rainbow ",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_light_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_medium_light_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_medium_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_medium_dark_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_dark_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_tada",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_heart",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_fire",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_muscle",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_climbing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_lab_coat",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_left_arrow",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_bald",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_red_hair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_curly_hair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_white_hair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_right_arrow",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_smile",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_laugh",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_eyes",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_joke",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_fear",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_surprise",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_female_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_skin_tone_preset",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_zwj",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gender_sign_preset",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_hair_style_preset",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_male_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_attention",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_approval",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_gratitude",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_anxiety",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_despair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_curious",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_old_woman",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_woman",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_girl",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_boy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_man",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_old_man",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cityscape",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cityscape_dusk",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cityscape_night",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_astronaut",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_rocket",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sparkles",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_tipping_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_gesturing_ok",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_bowing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_raising_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_gesturing_no",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_shrugging",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sunrise_mountains",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sunrise",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_baby",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_baby_bottle",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Emoji",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_raised_hands",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_point_up",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_thumbs_up",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_checkoff",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_100",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_warning",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_x",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_question",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "QMARK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CARET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UNDER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DLLR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PIPE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "TAB",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AMPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRCNT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COLON",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Symbol",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc SCRL_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mmv MOVE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc SCRL_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mmv MOVE_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mmv MOVE_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mmv MOVE_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc SCRL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc SCRL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mkp MCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mkp LCLK",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mkp RCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Mouse",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _LOCK",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PSCRN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_CALC",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFR",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_o_diaeresis",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_u_diaeresis",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_currency_euro",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_degree_sign",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRCNT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_a_diaeresis",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_szlig",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AMPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_micro",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_section_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_paragraph_sign",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_System",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_degree_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_y_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_o_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_u_base",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_n_tilde",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_c_cedilla",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_i_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_e_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_a_base",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_quotes_left_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_exclaim_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_question_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_quotes_right_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_currency_base",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_section_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_paragraph_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_o_ordinal",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_a_ordinal",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_World",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_World",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Gaming",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&lower",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MUTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_SLASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MULTIPLY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRINTSCREEN",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SCROLLLOCK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PERCENT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_APP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Function",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Gaming",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Gaming",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_System",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Emoji",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Cursor",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Number",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Mouse",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Symbol",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_World",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR_ALL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 0",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 7",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 8",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_2",
        "params": []
      },
      {
        "value": "&bt_3",
        "params": []
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 29,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_0",
        "params": []
      },
      {
        "value": "&bt_1",
        "params": []
      },
      {
        "value": "&out",
        "params": [
          {
            "value": "OUT_USB",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ]
  ],
  "custom_defined_behaviors": "// NOTE: Use the `#define` settings below to customize this keymap!\n// For example, here are the main optional features you can enable:\n#define DIFFICULTY_LEVEL  3 // 0:custom, 1:easy -> 5:hard (see below)\n#define ENFORCE_BILATERAL   // cancels single-handed home row mod+tap\n// TIP: Add more setting overrides here instead of editing them below.\n\n//////////////////////////////////////////////////////////////////////////////\n//\n// Sunaku's Keymap v35 -- \"Glorious Engrammer\"\n// - https://github.com/sunaku/glove80-keymaps\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//\n// DIFFICULTY_LEVEL specifies your level of expertise with this keymap.\n// It's meant to help newcomers gradually work their way up to mastery.\n// You can disable this setting by omitting it or assigning a `0` zero.\n//\n// #define DIFFICULTY_LEVEL 0 // custom (see defaults below)\n// #define DIFFICULTY_LEVEL 1 // novice (500ms)\n// #define DIFFICULTY_LEVEL 2 // slower (400ms)\n// #define DIFFICULTY_LEVEL 3 // normal (300ms)\n// #define DIFFICULTY_LEVEL 4 // faster (200ms)\n// #define DIFFICULTY_LEVEL 5 // expert (100ms)\n//\n#if defined(DIFFICULTY_LEVEL) && DIFFICULTY_LEVEL > 0\n#define DIFFICULTY_THRESHOLD ((6-DIFFICULTY_LEVEL)*100)\n#define HOMEY_HOLDING_TIME DIFFICULTY_THRESHOLD\n#define INDEX_HOLDING_TIME DIFFICULTY_THRESHOLD\n#define PLAIN_HOLDING_TIME DIFFICULTY_THRESHOLD\n#define SPACE_HOLDING_TIME DIFFICULTY_THRESHOLD\n#endif\n\n//\n// OPERATING_SYSTEM defines which operating system you intend to use\n// with this keymap, because shortcuts vary across operating systems.\n//\n// - https://zmk.dev/docs/codes\n// - https://en.wikipedia.org/wiki/Table_of_keyboard_shortcuts\n//\n#ifndef OPERATING_SYSTEM\n//#define OPERATING_SYSTEM 'L' // linux\n//#define OPERATING_SYSTEM 'M' // macos\n#define OPERATING_SYSTEM 'W' // windows\n#endif\n#if OPERATING_SYSTEM == 'M'\n    #define _C      LG\n    #define _A_TAB  LGUI\n    #define _G_TAB  LALT\n    #define _REDO   _C(LS(Z))\n    #define _POWER  K_POWER\n    #define _W      LA\n    #define _HOME   _C(LEFT)\n    #define _END    _C(RIGHT)\n#else\n    #define _C      LC\n    #define _A_TAB  LALT\n    #define _G_TAB  LGUI\n    #define _REDO   _C(Y)\n    #define _POWER  C_POWER\n    #define _W      _C\n    #define _HOME   HOME\n    #define _END    END\n#endif\n#define _SLEEP      C_SLEEP\n#if OPERATING_SYSTEM == 'W'\n    #define _LOCK   LG(L)\n#elif OPERATING_SYSTEM == 'M'\n    #define _LOCK   _C(LC(Q))\n#elif OPERATING_SYSTEM == 'L'\n    #define _LOCK   K_LOCK\n#endif\n#define _UNDO       _C(Z)\n#define _CUT        _C(X)\n#define _COPY       _C(C)\n#define _PASTE      _C(V)\n#define _FIND       _C(F)\n#define _FIND_NEXT  _C(G)\n#define _FIND_PREV  _C(LS(G))\n\n//\n// USE_NUMPAD_KEYCODES puts `KP_*` keycodes into the Number layer.\n//\n#ifdef USE_NUMPAD_KEYCODES\n#define _KP_N0 KP_N0\n#define _KP_N1 KP_N1\n#define _KP_N2 KP_N2\n#define _KP_N3 KP_N3\n#define _KP_N4 KP_N4\n#define _KP_N5 KP_N5\n#define _KP_N6 KP_N6\n#define _KP_N7 KP_N7\n#define _KP_N8 KP_N8\n#define _KP_N9 KP_N9\n#define _KP_PLUS KP_PLUS\n#define _KP_MINUS KP_MINUS\n#define _KP_ASTERISK KP_ASTERISK\n#define _KP_SLASH KP_SLASH\n#define _KP_COMMA KP_COMMA\n#define _KP_DOT KP_DOT\n#define _KP_EQUAL KP_EQUAL\n#define _KP_ENTER KP_ENTER\n#else\n#define _KP_N0 N0\n#define _KP_N1 N1\n#define _KP_N2 N2\n#define _KP_N3 N3\n#define _KP_N4 N4\n#define _KP_N5 N5\n#define _KP_N6 N6\n#define _KP_N7 N7\n#define _KP_N8 N8\n#define _KP_N9 N9\n#define _KP_PLUS PLUS\n#define _KP_MINUS MINUS\n#define _KP_ASTERISK ASTERISK\n#define _KP_SLASH SLASH\n#define _KP_COMMA COMMA\n#define _KP_DOT DOT\n#define _KP_EQUAL EQUAL\n#define _KP_ENTER ENTER\n#endif\n\n//\n// Glove80 specific symbol overrides to support non \"en-US\" locales\n//\n#undef  AMPS\n#define AMPS  LS(N7)\n#undef  AT\n#define AT    LS(N2)\n#undef  CARET\n#define CARET LS(N6)\n#undef  COLON\n#define COLON LS(SEMI)\n#undef  DLLR\n#define DLLR  LS(N4)\n#undef  DQT\n#define DQT   LS(SQT)\n#undef  EXCL\n#define EXCL  LS(N1)\n#undef  GT\n#define GT    LS(DOT)\n#undef  HASH\n#define HASH  LS(N3)\n#undef  LBRC\n#define LBRC  LS(LBKT)\n#undef  LPAR\n#define LPAR  LS(N9)\n#undef  LT\n#define LT    LS(COMMA)\n#undef  PIPE\n#define PIPE  LS(BSLH)\n#undef  PLUS\n#define PLUS  LS(EQUAL)\n#undef  PRCNT\n#define PRCNT LS(N5)\n#undef  QMARK\n#define QMARK LS(FSLH)\n#undef  RBRC\n#define RBRC  LS(RBKT)\n#undef  RPAR\n#define RPAR  LS(N0)\n#undef  STAR\n#define STAR  LS(N8)\n#undef  TILDE\n#define TILDE LS(GRAVE)\n#undef  UNDER\n#define UNDER LS(MINUS)\n\n//\n// Keymap specific knowledge of the base layer's alpha + ZMK layout\n//\n#if defined(LAYER_Engrammer) && LAYER_Engrammer == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 B\n#define KEY_LH_C4R3 Y\n#define KEY_LH_C3R3 O\n#define KEY_LH_C2R3 U\n#define KEY_LH_C1R3 SQT\n#define KEY_RH_C1R3 SEMI\n#define KEY_RH_C2R3 L\n#define KEY_RH_C3R3 D\n#define KEY_RH_C4R3 W\n#define KEY_RH_C5R3 V\n#define KEY_RH_C6R3 Z\n#define KEY_LH_C6R4 0\n#define KEY_LH_C5R4 C\n#define KEY_LH_C4R4 I\n#define KEY_LH_C3R4 E\n#define KEY_LH_C2R4 A\n#define KEY_LH_C1R4 COMMA\n#define KEY_RH_C1R4 DOT\n#define KEY_RH_C2R4 H\n#define KEY_RH_C3R4 T\n#define KEY_RH_C4R4 S\n#define KEY_RH_C5R4 N\n#define KEY_RH_C6R4 Q\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 G\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 J\n#define KEY_LH_C2R5 K\n#define KEY_LH_C1R5 MINUS\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 LEFT\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 UP\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 FSLH\n#define KEY_RH_C2R5 R\n#define KEY_RH_C3R5 M\n#define KEY_RH_C4R5 F\n#define KEY_RH_C5R5 P\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 LSFT\n#define KEY_RH_T6 LSFT\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 LBKT\n#define KEY_RH_C4R6 RBKT\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Engram) && LAYER_Engram == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 LBKT\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 RBKT\n#define KEY_LH_C6R3 AT\n#define KEY_LH_C5R3 B\n#define KEY_LH_C4R3 Y\n#define KEY_LH_C3R3 O\n#define KEY_LH_C2R3 U\n#define KEY_LH_C1R3 SQT\n#define KEY_RH_C1R3 DQT\n#define KEY_RH_C2R3 L\n#define KEY_RH_C3R3 D\n#define KEY_RH_C4R3 W\n#define KEY_RH_C5R3 V\n#define KEY_RH_C6R3 Z\n#define KEY_LH_C6R4 0\n#define KEY_LH_C5R4 C\n#define KEY_LH_C4R4 I\n#define KEY_LH_C3R4 E\n#define KEY_LH_C2R4 A\n#define KEY_LH_C1R4 COMMA\n#define KEY_RH_C1R4 DOT\n#define KEY_RH_C2R4 H\n#define KEY_RH_C3R4 T\n#define KEY_RH_C4R4 S\n#define KEY_RH_C5R4 N\n#define KEY_RH_C6R4 Q\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 G\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 J\n#define KEY_LH_C2R5 K\n#define KEY_LH_C1R5 MINUS\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 LEFT\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 UP\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 QMARK\n#define KEY_RH_C2R5 R\n#define KEY_RH_C3R5 M\n#define KEY_RH_C4R5 F\n#define KEY_RH_C5R5 P\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 LSFT\n#define KEY_RH_T6 LSFT\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 HASH\n#define KEY_RH_C4R6 FSLH\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Dvorak) && LAYER_Dvorak == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 SQT\n#define KEY_LH_C4R3 COMMA\n#define KEY_LH_C3R3 DOT\n#define KEY_LH_C2R3 P\n#define KEY_LH_C1R3 Y\n#define KEY_RH_C1R3 F\n#define KEY_RH_C2R3 G\n#define KEY_RH_C3R3 C\n#define KEY_RH_C4R3 R\n#define KEY_RH_C5R3 L\n#define KEY_RH_C6R3 SLASH\n#define KEY_LH_C6R4 0\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 O\n#define KEY_LH_C3R4 E\n#define KEY_LH_C2R4 U\n#define KEY_LH_C1R4 I\n#define KEY_RH_C1R4 D\n#define KEY_RH_C2R4 H\n#define KEY_RH_C3R4 T\n#define KEY_RH_C4R4 N\n#define KEY_RH_C5R4 S\n#define KEY_RH_C6R4 MINUS\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 SEMI\n#define KEY_LH_C4R5 Q\n#define KEY_LH_C3R5 J\n#define KEY_LH_C2R5 K\n#define KEY_LH_C1R5 X\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 LEFT\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 UP\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 B\n#define KEY_RH_C2R5 M\n#define KEY_RH_C3R5 W\n#define KEY_RH_C4R5 V\n#define KEY_RH_C5R5 Z\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 LSFT\n#define KEY_RH_T6 LSFT\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 LBKT\n#define KEY_RH_C4R6 RBKT\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_ColemakDHm) && LAYER_ColemakDHm == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 Q\n#define KEY_LH_C4R3 W\n#define KEY_LH_C3R3 F\n#define KEY_LH_C2R3 P\n#define KEY_LH_C1R3 B\n#define KEY_RH_C1R3 J\n#define KEY_RH_C2R3 L\n#define KEY_RH_C3R3 U\n#define KEY_RH_C4R3 Y\n#define KEY_RH_C5R3 SEMI\n#define KEY_RH_C6R3 MINUS\n#define KEY_LH_C6R4 0\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 R\n#define KEY_LH_C3R4 S\n#define KEY_LH_C2R4 T\n#define KEY_LH_C1R4 G\n#define KEY_RH_C1R4 M\n#define KEY_RH_C2R4 N\n#define KEY_RH_C3R4 E\n#define KEY_RH_C4R4 I\n#define KEY_RH_C5R4 O\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 Z\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 C\n#define KEY_LH_C2R5 D\n#define KEY_LH_C1R5 V\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 LEFT\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 UP\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 K\n#define KEY_RH_C2R5 H\n#define KEY_RH_C3R5 COMMA\n#define KEY_RH_C4R5 DOT\n#define KEY_RH_C5R5 FSLH\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 LSFT\n#define KEY_RH_T6 LSFT\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 LBKT\n#define KEY_RH_C4R6 RBKT\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Colemak) && LAYER_Colemak == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 Q\n#define KEY_LH_C4R3 W\n#define KEY_LH_C3R3 F\n#define KEY_LH_C2R3 P\n#define KEY_LH_C1R3 G\n#define KEY_RH_C1R3 J\n#define KEY_RH_C2R3 L\n#define KEY_RH_C3R3 U\n#define KEY_RH_C4R3 Y\n#define KEY_RH_C5R3 SEMI\n#define KEY_RH_C6R3 MINUS\n#define KEY_LH_C6R4 0\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 R\n#define KEY_LH_C3R4 S\n#define KEY_LH_C2R4 T\n#define KEY_LH_C1R4 D\n#define KEY_RH_C1R4 H\n#define KEY_RH_C2R4 N\n#define KEY_RH_C3R4 E\n#define KEY_RH_C4R4 I\n#define KEY_RH_C5R4 O\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 Z\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 C\n#define KEY_LH_C2R5 V\n#define KEY_LH_C1R5 B\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 LEFT\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 UP\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 K\n#define KEY_RH_C2R5 M\n#define KEY_RH_C3R5 COMMA\n#define KEY_RH_C4R5 DOT\n#define KEY_RH_C5R5 FSLH\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 LSFT\n#define KEY_RH_T6 LSFT\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 LBKT\n#define KEY_RH_C4R6 RBKT\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_QWERTY) && LAYER_QWERTY == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 Q\n#define KEY_LH_C4R3 W\n#define KEY_LH_C3R3 E\n#define KEY_LH_C2R3 R\n#define KEY_LH_C1R3 T\n#define KEY_RH_C1R3 Y\n#define KEY_RH_C2R3 U\n#define KEY_RH_C3R3 I\n#define KEY_RH_C4R3 O\n#define KEY_RH_C5R3 P\n#define KEY_RH_C6R3 MINUS\n#define KEY_LH_C6R4 0\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 S\n#define KEY_LH_C3R4 D\n#define KEY_LH_C2R4 F\n#define KEY_LH_C1R4 G\n#define KEY_RH_C1R4 H\n#define KEY_RH_C2R4 J\n#define KEY_RH_C3R4 K\n#define KEY_RH_C4R4 L\n#define KEY_RH_C5R4 SEMI\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 Z\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 C\n#define KEY_LH_C2R5 V\n#define KEY_LH_C1R5 B\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 LEFT\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 UP\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 N\n#define KEY_RH_C2R5 M\n#define KEY_RH_C3R5 COMMA\n#define KEY_RH_C4R5 DOT\n#define KEY_RH_C5R5 FSLH\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 LSFT\n#define KEY_RH_T6 LSFT\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 LBKT\n#define KEY_RH_C4R6 RBKT\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Norman) && LAYER_Norman == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 Q\n#define KEY_LH_C4R3 W\n#define KEY_LH_C3R3 D\n#define KEY_LH_C2R3 F\n#define KEY_LH_C1R3 K\n#define KEY_RH_C1R3 J\n#define KEY_RH_C2R3 U\n#define KEY_RH_C3R3 R\n#define KEY_RH_C4R3 L\n#define KEY_RH_C5R3 SEMI\n#define KEY_RH_C6R3 MINUS\n#define KEY_LH_C6R4 0\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 S\n#define KEY_LH_C3R4 E\n#define KEY_LH_C2R4 T\n#define KEY_LH_C1R4 G\n#define KEY_RH_C1R4 Y\n#define KEY_RH_C2R4 N\n#define KEY_RH_C3R4 I\n#define KEY_RH_C4R4 O\n#define KEY_RH_C5R4 H\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 Z\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 C\n#define KEY_LH_C2R5 V\n#define KEY_LH_C1R5 B\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 LEFT\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 UP\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 P\n#define KEY_RH_C2R5 M\n#define KEY_RH_C3R5 COMMA\n#define KEY_RH_C4R5 DOT\n#define KEY_RH_C5R5 FSLH\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 LSFT\n#define KEY_RH_T6 LSFT\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 LBKT\n#define KEY_RH_C4R6 RBKT\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Workman) && LAYER_Workman == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 Q\n#define KEY_LH_C4R3 D\n#define KEY_LH_C3R3 R\n#define KEY_LH_C2R3 W\n#define KEY_LH_C1R3 B\n#define KEY_RH_C1R3 J\n#define KEY_RH_C2R3 F\n#define KEY_RH_C3R3 U\n#define KEY_RH_C4R3 P\n#define KEY_RH_C5R3 SEMI\n#define KEY_RH_C6R3 MINUS\n#define KEY_LH_C6R4 0\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 S\n#define KEY_LH_C3R4 H\n#define KEY_LH_C2R4 T\n#define KEY_LH_C1R4 G\n#define KEY_RH_C1R4 Y\n#define KEY_RH_C2R4 N\n#define KEY_RH_C3R4 E\n#define KEY_RH_C4R4 O\n#define KEY_RH_C5R4 I\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 Z\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 M\n#define KEY_LH_C2R5 C\n#define KEY_LH_C1R5 V\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 LEFT\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 UP\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 K\n#define KEY_RH_C2R5 L\n#define KEY_RH_C3R5 COMMA\n#define KEY_RH_C4R5 DOT\n#define KEY_RH_C5R5 FSLH\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 LSFT\n#define KEY_RH_T6 LSFT\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 LBKT\n#define KEY_RH_C4R6 RBKT\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Halmak) && LAYER_Halmak == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 W\n#define KEY_LH_C4R3 L\n#define KEY_LH_C3R3 R\n#define KEY_LH_C2R3 B\n#define KEY_LH_C1R3 Z\n#define KEY_RH_C1R3 SEMI\n#define KEY_RH_C2R3 Q\n#define KEY_RH_C3R3 U\n#define KEY_RH_C4R3 D\n#define KEY_RH_C5R3 J\n#define KEY_RH_C6R3 MINUS\n#define KEY_LH_C6R4 0\n#define KEY_LH_C5R4 S\n#define KEY_LH_C4R4 H\n#define KEY_LH_C3R4 N\n#define KEY_LH_C2R4 T\n#define KEY_LH_C1R4 COMMA\n#define KEY_RH_C1R4 DOT\n#define KEY_RH_C2R4 A\n#define KEY_RH_C3R4 E\n#define KEY_RH_C4R4 O\n#define KEY_RH_C5R4 I\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 F\n#define KEY_LH_C4R5 M\n#define KEY_LH_C3R5 V\n#define KEY_LH_C2R5 C\n#define KEY_LH_C1R5 FSLH\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 LEFT\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 UP\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 G\n#define KEY_RH_C2R5 P\n#define KEY_RH_C3R5 X\n#define KEY_RH_C4R5 K\n#define KEY_RH_C5R5 Y\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 LSFT\n#define KEY_RH_T6 LSFT\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 LBKT\n#define KEY_RH_C4R6 RBKT\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n\ncombos {\n    compatible = \"zmk,combos\";\n\n    //\n    // COMBO_FIRING_DECAY defines how much time you have left (milliseconds)\n    // after pressing the first key in a ZMK combo to finish the whole chord.\n    //\n    #ifndef COMBO_FIRING_DECAY\n    #define COMBO_FIRING_DECAY 50\n    #endif\n    #ifdef LAYER_Gaming\n    combo_gaming_layer_toggle {\n        timeout-ms = <COMBO_FIRING_DECAY>;\n        key-positions = <POS_LH_T3 POS_LH_T6>;\n        bindings = <&tog LAYER_Gaming>;\n        layers = <0 LAYER_Gaming>;\n    };\n    #endif\n};\n\nbehaviors {\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Miryoku layers and home row mods (ported from my QMK endgame)\n    // - https://sunaku.github.io/home-row-mods.html#porting-to-zmk\n    // - https://github.com/urob/zmk-config#timeless-homerow-mods\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // ENFORCE_BILATERAL cancels out single-handed home row mods activation by\n    // releasing any currently pressed mods and replacing them with plain taps.\n    //\n    // NOTE: You may still encounter \"flashing mods\" where an operating system\n    // action is triggered by the release of mods, such as LGUI which launches\n    // the Windows Start Menu and LALT which opens the Microsoft Office Ribbon.\n    //\n    //#define ENFORCE_BILATERAL\n\n    //\n    // The *_FINGER_MOD specify which modifiers are used by home row mod keys.\n    // Here, we use Miryoku's \"GACS\" (Win, Alt, Ctrl, Shift) order by default,\n    // unless OPERATING_SYSTEM is macOS, in which case Win & Ctrl are swapped.\n    //\n    #ifndef PINKY_FINGER_MOD\n      #if OPERATING_SYSTEM == 'M'\n        #define PINKY_FINGER_MOD LCTL\n      #else\n        #define PINKY_FINGER_MOD LGUI\n      #endif\n    #endif\n    #ifndef RING1_FINGER_MOD\n    #define RING1_FINGER_MOD LALT\n    #endif\n    #ifndef RING2_FINGER_MOD\n    #define RING2_FINGER_MOD RALT\n    #endif\n    #ifndef MIDDY_FINGER_MOD\n      #if OPERATING_SYSTEM == 'M'\n        #define MIDDY_FINGER_MOD LGUI\n      #else\n        #define MIDDY_FINGER_MOD LCTL\n      #endif\n    #endif\n    #ifndef INDEX_FINGER_MOD\n    #define INDEX_FINGER_MOD LSFT\n    #endif\n    //\n    // The following settings let you configure mods individually, per finger:\n    //\n    #ifndef LEFT_PINKY_MOD\n    #define LEFT_PINKY_MOD  PINKY_FINGER_MOD\n    #endif\n    #ifndef RIGHT_PINKY_MOD\n    #define RIGHT_PINKY_MOD PINKY_FINGER_MOD\n    #endif\n    #ifndef LEFT_RING1_MOD\n    #define LEFT_RING1_MOD  RING1_FINGER_MOD\n    #endif\n    #ifndef RIGHT_RING1_MOD\n    #define RIGHT_RING1_MOD RING1_FINGER_MOD\n    #endif\n    #ifndef LEFT_RING2_MOD\n    #define LEFT_RING2_MOD  RING2_FINGER_MOD\n    #endif\n    #ifndef RIGHT_RING2_MOD\n    #define RIGHT_RING2_MOD RING2_FINGER_MOD\n    #endif\n    #ifndef LEFT_MIDDY_MOD\n    #define LEFT_MIDDY_MOD  MIDDY_FINGER_MOD\n    #endif\n    #ifndef RIGHT_MIDDY_MOD\n    #define RIGHT_MIDDY_MOD MIDDY_FINGER_MOD\n    #endif\n    #ifndef LEFT_INDEX_MOD\n    #define LEFT_INDEX_MOD  INDEX_FINGER_MOD\n    #endif\n    #ifndef RIGHT_INDEX_MOD\n    #define RIGHT_INDEX_MOD INDEX_FINGER_MOD\n    #endif\n\n    //\n    // HOMEY_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for the pinky, ring, and middle fingers (which are assigned to Super,\n    // Alt, and Ctrl respectively in the Miryoku system) on home row keys.\n    //\n    #ifndef HOMEY_HOLDING_TYPE\n    #define HOMEY_HOLDING_TYPE \"tap-preferred\"\n    #endif\n\n    //\n    // HOMEY_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // home row mod keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Ctrl-Click).\n    //\n    #ifndef HOMEY_HOLDING_TIME\n    #define HOMEY_HOLDING_TIME 270 // TAPPING_TERM + ALLOW_CROSSOVER_AFTER\n    #endif\n\n    //\n    // HOMEY_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #ifndef HOMEY_STREAK_DECAY\n    #define HOMEY_STREAK_DECAY 250\n    #endif\n\n    //\n    // HOMEY_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #ifndef HOMEY_REPEAT_DECAY\n    #define HOMEY_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n    #endif\n\n    //\n    // CHORD_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for chorded home row mods (secondary keypresses in multi-mod chords).\n    //\n    #ifndef CHORD_HOLDING_TYPE\n    #define CHORD_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n\n    //\n    // CHORD_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // home row mod keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Ctrl-Click).\n    // This is specifically for secondary keypresses in multi-mod chords.\n    //\n    #ifndef CHORD_HOLDING_TIME\n    #define CHORD_HOLDING_TIME 150\n    #endif\n\n    //\n    // CHORD_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing\n    // This is specifically for secondary keypresses in multi-mod chords.\n    //\n    #ifndef CHORD_STREAK_DECAY\n    #define CHORD_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n\n    //\n    // CHORD_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    // This is specifically for secondary keypresses in multi-mod chords.\n    //\n    #ifndef CHORD_REPEAT_DECAY\n    #define CHORD_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n\n    //\n    // INDEX_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for index fingers (which Miryoku assigns to Shift) on home row keys.\n    //\n    // NOTE: The \"tap-preferred\" flavor of ZMK hold-tap for index finger keys\n    // allows faster activation of the Shift modifier (without having to wait\n    // for the modified key to be released as the \"balanced\" flavor requires).\n    // Typing streaks and the `hold-trigger-on-release` setting are disabled\n    // for the index fingers so as not to hinder their speed and dexterity.\n    //\n    #ifndef INDEX_HOLDING_TYPE\n    #define INDEX_HOLDING_TYPE \"tap-preferred\"\n    #endif\n\n    //\n    // INDEX_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // index finger keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Shift-Click).\n    //\n    #ifndef INDEX_HOLDING_TIME\n    #define INDEX_HOLDING_TIME 170\n    #endif\n\n    //\n    // INDEX_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #ifndef INDEX_STREAK_DECAY\n    #define INDEX_STREAK_DECAY 150\n    #endif\n\n    //\n    // INDEX_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #ifndef INDEX_REPEAT_DECAY\n    #define INDEX_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n    #endif\n\n    //\n    // PLAIN_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for index fingers (which Miryoku assigns to Shift) on home row keys.\n    //\n    // NOTE: The \"tap-preferred\" flavor of ZMK hold-tap for index finger keys\n    // allows faster activation of the Shift modifier (without having to wait\n    // for the modified key to be released as the \"balanced\" flavor requires).\n    // Typing streaks and the `hold-trigger-on-release` setting are disabled\n    // for the index fingers so as not to hinder their speed and dexterity.\n    //\n    #ifndef PLAIN_HOLDING_TYPE\n    #define PLAIN_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n\n    //\n    // PLAIN_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // index finger keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Shift-Click).\n    //\n    #ifndef PLAIN_HOLDING_TIME\n    #define PLAIN_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n\n    //\n    // PLAIN_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #ifndef PLAIN_STREAK_DECAY\n    #define PLAIN_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n\n    //\n    // PLAIN_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #ifndef PLAIN_REPEAT_DECAY\n    #define PLAIN_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n    #endif\n\n    //\n    // THUMB_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for the thumbs (which are assigned to 6 layers in the Miryoku system).\n    //\n    // NOTE: The \"balanced\" flavor of ZMK hold-tap provides instant modifier\n    // activation for the symbol layer (if the tapped symbol key is released\n    // while the thumb layer key is still held down) for quicker programming.\n    //\n    #ifndef THUMB_HOLDING_TYPE\n    #define THUMB_HOLDING_TYPE \"balanced\"\n    #endif\n\n    //\n    // THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // a thumb key to activate a layer.  Shorter holds are treated as taps.\n    //\n    #ifndef THUMB_HOLDING_TIME\n    #define THUMB_HOLDING_TIME 200\n    #endif\n\n    //\n    // THUMB_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #ifndef THUMB_REPEAT_DECAY\n    #define THUMB_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n    #endif\n\n    //\n    // SPACE_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for spacebar (assigned to the right thumb's home position by default).\n    //\n    // NOTE: The \"balanced\" flavor of ZMK hold-tap provides instant modifier\n    // activation for the symbol layer (if the tapped symbol key is released\n    // while the thumb layer key is still held down) for quicker programming.\n    //\n    #ifndef SPACE_HOLDING_TYPE\n    #define SPACE_HOLDING_TYPE THUMB_HOLDING_TYPE\n    #endif\n\n    //\n    // SPACE_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // the space thumb key to activate.  Shorter holds are treated as taps.\n    //\n    #ifndef SPACE_HOLDING_TIME\n    #define SPACE_HOLDING_TIME THUMB_HOLDING_TIME\n    #endif\n\n    //\n    // SPACE_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #ifndef SPACE_REPEAT_DECAY\n    #define SPACE_REPEAT_DECAY 150\n    #endif\n\n    //\n    // Glove80 key positions index for positional hold-tap\n    // - https://discord.com/channels/877392805654306816/937645688244826154/1066713913351221248\n    // - https://media.discordapp.net/attachments/937645688244826154/1066713913133121556/image.png\n    //\n    // |------------------------|------------------------|\n    // | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |\n    // |                        |                        |\n    // |  0  1  2  3  4         |          5  6  7  8  9 |\n    // | 10 11 12 13 14 15      |      16 17 18 19 20 21 |\n    // | 22 23 24 25 26 27      |      28 29 30 31 32 33 |\n    // | 34 35 36 37 38 39      |      40 41 42 43 44 45 |\n    // | 46 47 48 49 50 51      |      58 59 60 61 62 63 |\n    // | 64 65 66 67 68         |         75 76 77 78 79 |\n    // |                69 52   |   57 74                |\n    // |                 70 53  |  56 73                 |\n    // |                  71 54 | 55 72                  |\n    // |------------------------|------------------------|\n    //\n    #define LEFT_HAND_KEYS      \\\n          0  1  2  3  4         \\\n         10 11 12 13 14 15      \\\n         22 23 24 25 26 27      \\\n         34 35 36 37 38 39      \\\n         46 47 48 49 50 51      \\\n         64 65 66 67 68\n    #define RIGHT_HAND_KEYS     \\\n                                           5  6  7  8  9 \\\n                                       16 17 18 19 20 21 \\\n                                       28 29 30 31 32 33 \\\n                                       40 41 42 43 44 45 \\\n                                       58 59 60 61 62 63 \\\n                                          75 76 77 78 79\n    #define THUMB_KEYS          \\\n                        69 52       57 74                \\\n                         70 53     56 73                 \\\n                          71 54   55 72\n\n    #define LEFT_PINKY_KEY  KEY_LH_C5R4\n    #define LEFT_RING1_KEY  KEY_LH_C4R4\n    #define LEFT_RING2_KEY  KEY_LH_C4R3\n    #define LEFT_MIDDY_KEY  KEY_LH_C3R4\n    #define LEFT_INDEX_KEY  KEY_LH_C2R4\n    #define LEFT_PLAIN_KEY  KEY_LH_C1R4\n\n    #define RIGHT_PINKY_KEY KEY_RH_C5R4\n    #define RIGHT_RING1_KEY KEY_RH_C4R4\n    #define RIGHT_RING2_KEY KEY_RH_C4R3\n    #define RIGHT_MIDDY_KEY KEY_RH_C3R4\n    #define RIGHT_INDEX_KEY KEY_RH_C2R4\n    #define RIGHT_PLAIN_KEY KEY_RH_C1R4\n    #if defined(LAYER_Engram) && LAYER_Engram == 0\n    #define LeftPlainKey  engram_COMMA\n    #define RightPlainKey engram_DOT\n    #else\n    #define LeftPlainKey  kp LEFT_PLAIN_KEY\n    #define RightPlainKey kp RIGHT_PLAIN_KEY\n    #endif\n\n    //\n    // Home row mods with bilateral combinations support\n    //\n    #ifndef PINKY_HOLDING_TYPE\n    #define PINKY_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n    #ifndef PINKY_CHORD_HOLDING_TYPE\n    #define PINKY_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_CHORD_HOLDING_TYPE\n    #define LEFT_PINKY_CHORD_HOLDING_TYPE PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #define RIGHT_PINKY_CHORD_HOLDING_TYPE PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef PINKY_HOLDING_TIME\n    #define PINKY_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n    #ifndef PINKY_CHORD_HOLDING_TIME\n    #define PINKY_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_CHORD_HOLDING_TIME\n    #define LEFT_PINKY_CHORD_HOLDING_TIME PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_CHORD_HOLDING_TIME\n    #define RIGHT_PINKY_CHORD_HOLDING_TIME PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef PINKY_STREAK_DECAY\n    #define PINKY_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n    #ifndef PINKY_CHORD_STREAK_DECAY\n    #define PINKY_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_CHORD_STREAK_DECAY\n    #define LEFT_PINKY_CHORD_STREAK_DECAY PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_CHORD_STREAK_DECAY\n    #define RIGHT_PINKY_CHORD_STREAK_DECAY PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef PINKY_REPEAT_DECAY\n    #define PINKY_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n    #ifndef PINKY_CHORD_REPEAT_DECAY\n    #define PINKY_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_PINKY_CHORD_REPEAT_DECAY\n    #define LEFT_PINKY_CHORD_REPEAT_DECAY PINKY_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #define RIGHT_PINKY_CHORD_REPEAT_DECAY PINKY_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RING1_HOLDING_TYPE\n    #define RING1_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n    #ifndef RING1_CHORD_HOLDING_TYPE\n    #define RING1_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_CHORD_HOLDING_TYPE\n    #define LEFT_RING1_CHORD_HOLDING_TYPE RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_CHORD_HOLDING_TYPE\n    #define RIGHT_RING1_CHORD_HOLDING_TYPE RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RING1_HOLDING_TIME\n    #define RING1_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n    #ifndef RING1_CHORD_HOLDING_TIME\n    #define RING1_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_CHORD_HOLDING_TIME\n    #define LEFT_RING1_CHORD_HOLDING_TIME RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_CHORD_HOLDING_TIME\n    #define RIGHT_RING1_CHORD_HOLDING_TIME RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RING1_STREAK_DECAY\n    #define RING1_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n    #ifndef RING1_CHORD_STREAK_DECAY\n    #define RING1_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_CHORD_STREAK_DECAY\n    #define LEFT_RING1_CHORD_STREAK_DECAY RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_CHORD_STREAK_DECAY\n    #define RIGHT_RING1_CHORD_STREAK_DECAY RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RING1_REPEAT_DECAY\n    #define RING1_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n    #ifndef RING1_CHORD_REPEAT_DECAY\n    #define RING1_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_RING1_CHORD_REPEAT_DECAY\n    #define LEFT_RING1_CHORD_REPEAT_DECAY RING1_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_RING1_CHORD_REPEAT_DECAY\n    #define RIGHT_RING1_CHORD_REPEAT_DECAY RING1_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RING2_HOLDING_TYPE\n    #define RING2_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n    #ifndef RING2_CHORD_HOLDING_TYPE\n    #define RING2_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_CHORD_HOLDING_TYPE\n    #define LEFT_RING2_CHORD_HOLDING_TYPE RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_CHORD_HOLDING_TYPE\n    #define RIGHT_RING2_CHORD_HOLDING_TYPE RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RING2_HOLDING_TIME\n    #define RING2_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n    #ifndef RING2_CHORD_HOLDING_TIME\n    #define RING2_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_CHORD_HOLDING_TIME\n    #define LEFT_RING2_CHORD_HOLDING_TIME RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_CHORD_HOLDING_TIME\n    #define RIGHT_RING2_CHORD_HOLDING_TIME RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RING2_STREAK_DECAY\n    #define RING2_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n    #ifndef RING2_CHORD_STREAK_DECAY\n    #define RING2_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_CHORD_STREAK_DECAY\n    #define LEFT_RING2_CHORD_STREAK_DECAY RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_CHORD_STREAK_DECAY\n    #define RIGHT_RING2_CHORD_STREAK_DECAY RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RING2_REPEAT_DECAY\n    #define RING2_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n    #ifndef RING2_CHORD_REPEAT_DECAY\n    #define RING2_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_RING2_CHORD_REPEAT_DECAY\n    #define LEFT_RING2_CHORD_REPEAT_DECAY RING2_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_RING2_CHORD_REPEAT_DECAY\n    #define RIGHT_RING2_CHORD_REPEAT_DECAY RING2_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef MIDDY_HOLDING_TYPE\n    #define MIDDY_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n    #ifndef MIDDY_CHORD_HOLDING_TYPE\n    #define MIDDY_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #define LEFT_MIDDY_CHORD_HOLDING_TYPE MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #define RIGHT_MIDDY_CHORD_HOLDING_TYPE MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef MIDDY_HOLDING_TIME\n    #define MIDDY_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n    #ifndef MIDDY_CHORD_HOLDING_TIME\n    #define MIDDY_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_CHORD_HOLDING_TIME\n    #define LEFT_MIDDY_CHORD_HOLDING_TIME MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #define RIGHT_MIDDY_CHORD_HOLDING_TIME MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef MIDDY_STREAK_DECAY\n    #define MIDDY_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n    #ifndef MIDDY_CHORD_STREAK_DECAY\n    #define MIDDY_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_CHORD_STREAK_DECAY\n    #define LEFT_MIDDY_CHORD_STREAK_DECAY MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #define RIGHT_MIDDY_CHORD_STREAK_DECAY MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef MIDDY_REPEAT_DECAY\n    #define MIDDY_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n    #ifndef MIDDY_CHORD_REPEAT_DECAY\n    #define MIDDY_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #define LEFT_MIDDY_CHORD_REPEAT_DECAY MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #define RIGHT_MIDDY_CHORD_REPEAT_DECAY MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef INDEX_HOLDING_TYPE\n    #define INDEX_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n    #ifndef INDEX_CHORD_HOLDING_TYPE\n    #define INDEX_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_CHORD_HOLDING_TYPE\n    #define LEFT_INDEX_CHORD_HOLDING_TYPE INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #define RIGHT_INDEX_CHORD_HOLDING_TYPE INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef INDEX_HOLDING_TIME\n    #define INDEX_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n    #ifndef INDEX_CHORD_HOLDING_TIME\n    #define INDEX_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_CHORD_HOLDING_TIME\n    #define LEFT_INDEX_CHORD_HOLDING_TIME INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_CHORD_HOLDING_TIME\n    #define RIGHT_INDEX_CHORD_HOLDING_TIME INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef INDEX_STREAK_DECAY\n    #define INDEX_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n    #ifndef INDEX_CHORD_STREAK_DECAY\n    #define INDEX_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_CHORD_STREAK_DECAY\n    #define LEFT_INDEX_CHORD_STREAK_DECAY INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_CHORD_STREAK_DECAY\n    #define RIGHT_INDEX_CHORD_STREAK_DECAY INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef INDEX_REPEAT_DECAY\n    #define INDEX_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n    #ifndef INDEX_CHORD_REPEAT_DECAY\n    #define INDEX_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_INDEX_CHORD_REPEAT_DECAY\n    #define LEFT_INDEX_CHORD_REPEAT_DECAY INDEX_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #define RIGHT_INDEX_CHORD_REPEAT_DECAY INDEX_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_PINKY_HOLDING_TYPE\n    #define LEFT_PINKY_HOLDING_TYPE PINKY_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_HOLDING_TIME\n    #define LEFT_PINKY_HOLDING_TIME PINKY_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_STREAK_DECAY\n    #define LEFT_PINKY_STREAK_DECAY PINKY_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_REPEAT_DECAY\n    #define LEFT_PINKY_REPEAT_DECAY PINKY_REPEAT_DECAY\n    #endif\n\n    left_pinky: homey_left_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_pinky_bilateral: homey_left_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&left_pinky_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    left_pinky_hold: homey_left_pinky_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftPinky>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftPinky>\n            ;\n    };\n    left_pinky_tap: homey_left_pinky_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp LEFT_PINKY_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define LeftPinky(key, layer_index) LeftPinky_unroll(layer_index) (key)\n    #define LeftPinky_unroll(layer_index) LeftPinky_concat(LeftPinky_layer, layer_index)\n    #define LeftPinky_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define left_pinky_layer0_variant left_pinky_bilateral\n    #else\n    #define left_pinky_layer0_variant left_pinky\n    #endif\n    #define LeftPinky_layer0(key) left_pinky_layer0_variant LEFT_PINKY_MOD key\n    #define LeftPinky_layer1(key) left_pinky LEFT_PINKY_MOD key\n    #define LeftPinky_layer2(key) left_pinky LEFT_PINKY_MOD key\n    #define LeftPinky_layer3(key) left_pinky LEFT_PINKY_MOD key\n    #define LeftPinky_layer4(key) left_pinky LEFT_PINKY_MOD key\n    #define LeftPinky_layer5(key) left_pinky LEFT_PINKY_MOD key\n    #define LeftPinky_layer6(key) left_pinky LEFT_PINKY_MOD key\n    #define LeftPinky_layer7(key) left_pinky LEFT_PINKY_MOD key\n    #define LeftPinky_layer8(key) left_pinky LEFT_PINKY_MOD key\n    #ifndef RIGHT_PINKY_HOLDING_TYPE\n    #define RIGHT_PINKY_HOLDING_TYPE PINKY_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_HOLDING_TIME\n    #define RIGHT_PINKY_HOLDING_TIME PINKY_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_STREAK_DECAY\n    #define RIGHT_PINKY_STREAK_DECAY PINKY_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_REPEAT_DECAY\n    #define RIGHT_PINKY_REPEAT_DECAY PINKY_REPEAT_DECAY\n    #endif\n\n    right_pinky: homey_right_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_pinky_bilateral: homey_right_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&right_pinky_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    right_pinky_hold: homey_right_pinky_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightPinky>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightPinky>\n            ;\n    };\n    right_pinky_tap: homey_right_pinky_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp RIGHT_PINKY_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define RightPinky(key, layer_index) RightPinky_unroll(layer_index) (key)\n    #define RightPinky_unroll(layer_index) RightPinky_concat(RightPinky_layer, layer_index)\n    #define RightPinky_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define right_pinky_layer0_variant right_pinky_bilateral\n    #else\n    #define right_pinky_layer0_variant right_pinky\n    #endif\n    #define RightPinky_layer0(key) right_pinky_layer0_variant RIGHT_PINKY_MOD key\n    #define RightPinky_layer1(key) right_pinky RIGHT_PINKY_MOD key\n    #define RightPinky_layer2(key) right_pinky RIGHT_PINKY_MOD key\n    #define RightPinky_layer3(key) right_pinky RIGHT_PINKY_MOD key\n    #define RightPinky_layer4(key) right_pinky RIGHT_PINKY_MOD key\n    #define RightPinky_layer5(key) right_pinky RIGHT_PINKY_MOD key\n    #define RightPinky_layer6(key) right_pinky RIGHT_PINKY_MOD key\n    #define RightPinky_layer7(key) right_pinky RIGHT_PINKY_MOD key\n    #define RightPinky_layer8(key) right_pinky RIGHT_PINKY_MOD key\n    #ifndef LEFT_RING1_HOLDING_TYPE\n    #define LEFT_RING1_HOLDING_TYPE RING1_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_HOLDING_TIME\n    #define LEFT_RING1_HOLDING_TIME RING1_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_STREAK_DECAY\n    #define LEFT_RING1_STREAK_DECAY RING1_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_REPEAT_DECAY\n    #define LEFT_RING1_REPEAT_DECAY RING1_REPEAT_DECAY\n    #endif\n\n    left_ring1: homey_left_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring1_bilateral: homey_left_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&left_ring1_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    left_ring1_hold: homey_left_ring1_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftRing1>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftRing1>\n            ;\n    };\n    left_ring1_tap: homey_left_ring1_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp LEFT_RING1_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define LeftRing1(key, layer_index) LeftRing1_unroll(layer_index) (key)\n    #define LeftRing1_unroll(layer_index) LeftRing1_concat(LeftRing1_layer, layer_index)\n    #define LeftRing1_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define left_ring1_layer0_variant left_ring1_bilateral\n    #else\n    #define left_ring1_layer0_variant left_ring1\n    #endif\n    #define LeftRing1_layer0(key) left_ring1_layer0_variant LEFT_RING1_MOD key\n    #define LeftRing1_layer1(key) left_ring1 LEFT_RING1_MOD key\n    #define LeftRing1_layer2(key) left_ring1 LEFT_RING1_MOD key\n    #define LeftRing1_layer3(key) left_ring1 LEFT_RING1_MOD key\n    #define LeftRing1_layer4(key) left_ring1 LEFT_RING1_MOD key\n    #define LeftRing1_layer5(key) left_ring1 LEFT_RING1_MOD key\n    #define LeftRing1_layer6(key) left_ring1 LEFT_RING1_MOD key\n    #define LeftRing1_layer7(key) left_ring1 LEFT_RING1_MOD key\n    #define LeftRing1_layer8(key) left_ring1 LEFT_RING1_MOD key\n    #ifndef RIGHT_RING1_HOLDING_TYPE\n    #define RIGHT_RING1_HOLDING_TYPE RING1_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_HOLDING_TIME\n    #define RIGHT_RING1_HOLDING_TIME RING1_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_STREAK_DECAY\n    #define RIGHT_RING1_STREAK_DECAY RING1_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_REPEAT_DECAY\n    #define RIGHT_RING1_REPEAT_DECAY RING1_REPEAT_DECAY\n    #endif\n\n    right_ring1: homey_right_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring1_bilateral: homey_right_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&right_ring1_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    right_ring1_hold: homey_right_ring1_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightRing1>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightRing1>\n            ;\n    };\n    right_ring1_tap: homey_right_ring1_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp RIGHT_RING1_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define RightRing1(key, layer_index) RightRing1_unroll(layer_index) (key)\n    #define RightRing1_unroll(layer_index) RightRing1_concat(RightRing1_layer, layer_index)\n    #define RightRing1_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define right_ring1_layer0_variant right_ring1_bilateral\n    #else\n    #define right_ring1_layer0_variant right_ring1\n    #endif\n    #define RightRing1_layer0(key) right_ring1_layer0_variant RIGHT_RING1_MOD key\n    #define RightRing1_layer1(key) right_ring1 RIGHT_RING1_MOD key\n    #define RightRing1_layer2(key) right_ring1 RIGHT_RING1_MOD key\n    #define RightRing1_layer3(key) right_ring1 RIGHT_RING1_MOD key\n    #define RightRing1_layer4(key) right_ring1 RIGHT_RING1_MOD key\n    #define RightRing1_layer5(key) right_ring1 RIGHT_RING1_MOD key\n    #define RightRing1_layer6(key) right_ring1 RIGHT_RING1_MOD key\n    #define RightRing1_layer7(key) right_ring1 RIGHT_RING1_MOD key\n    #define RightRing1_layer8(key) right_ring1 RIGHT_RING1_MOD key\n    #ifndef LEFT_RING2_HOLDING_TYPE\n    #define LEFT_RING2_HOLDING_TYPE RING2_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_HOLDING_TIME\n    #define LEFT_RING2_HOLDING_TIME RING2_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_STREAK_DECAY\n    #define LEFT_RING2_STREAK_DECAY RING2_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_REPEAT_DECAY\n    #define LEFT_RING2_REPEAT_DECAY RING2_REPEAT_DECAY\n    #endif\n\n    left_ring2: homey_left_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring2_bilateral: homey_left_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&left_ring2_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    left_ring2_hold: homey_left_ring2_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftRing2>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftRing2>\n            ;\n    };\n    left_ring2_tap: homey_left_ring2_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp LEFT_RING2_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define LeftRing2(key, layer_index) LeftRing2_unroll(layer_index) (key)\n    #define LeftRing2_unroll(layer_index) LeftRing2_concat(LeftRing2_layer, layer_index)\n    #define LeftRing2_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define left_ring2_layer0_variant left_ring2_bilateral\n    #else\n    #define left_ring2_layer0_variant left_ring2\n    #endif\n    #define LeftRing2_layer0(key) left_ring2_layer0_variant LEFT_RING2_MOD key\n    #define LeftRing2_layer1(key) left_ring2 LEFT_RING2_MOD key\n    #define LeftRing2_layer2(key) left_ring2 LEFT_RING2_MOD key\n    #define LeftRing2_layer3(key) left_ring2 LEFT_RING2_MOD key\n    #define LeftRing2_layer4(key) left_ring2 LEFT_RING2_MOD key\n    #define LeftRing2_layer5(key) left_ring2 LEFT_RING2_MOD key\n    #define LeftRing2_layer6(key) left_ring2 LEFT_RING2_MOD key\n    #define LeftRing2_layer7(key) left_ring2 LEFT_RING2_MOD key\n    #define LeftRing2_layer8(key) left_ring2 LEFT_RING2_MOD key\n    #ifndef RIGHT_RING2_HOLDING_TYPE\n    #define RIGHT_RING2_HOLDING_TYPE RING2_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_HOLDING_TIME\n    #define RIGHT_RING2_HOLDING_TIME RING2_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_STREAK_DECAY\n    #define RIGHT_RING2_STREAK_DECAY RING2_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_REPEAT_DECAY\n    #define RIGHT_RING2_REPEAT_DECAY RING2_REPEAT_DECAY\n    #endif\n\n    right_ring2: homey_right_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring2_bilateral: homey_right_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&right_ring2_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    right_ring2_hold: homey_right_ring2_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightRing2>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightRing2>\n            ;\n    };\n    right_ring2_tap: homey_right_ring2_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp RIGHT_RING2_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define RightRing2(key, layer_index) RightRing2_unroll(layer_index) (key)\n    #define RightRing2_unroll(layer_index) RightRing2_concat(RightRing2_layer, layer_index)\n    #define RightRing2_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define right_ring2_layer0_variant right_ring2_bilateral\n    #else\n    #define right_ring2_layer0_variant right_ring2\n    #endif\n    #define RightRing2_layer0(key) right_ring2_layer0_variant RIGHT_RING2_MOD key\n    #define RightRing2_layer1(key) right_ring2 RIGHT_RING2_MOD key\n    #define RightRing2_layer2(key) right_ring2 RIGHT_RING2_MOD key\n    #define RightRing2_layer3(key) right_ring2 RIGHT_RING2_MOD key\n    #define RightRing2_layer4(key) right_ring2 RIGHT_RING2_MOD key\n    #define RightRing2_layer5(key) right_ring2 RIGHT_RING2_MOD key\n    #define RightRing2_layer6(key) right_ring2 RIGHT_RING2_MOD key\n    #define RightRing2_layer7(key) right_ring2 RIGHT_RING2_MOD key\n    #define RightRing2_layer8(key) right_ring2 RIGHT_RING2_MOD key\n    #ifndef LEFT_MIDDY_HOLDING_TYPE\n    #define LEFT_MIDDY_HOLDING_TYPE MIDDY_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_HOLDING_TIME\n    #define LEFT_MIDDY_HOLDING_TIME MIDDY_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_STREAK_DECAY\n    #define LEFT_MIDDY_STREAK_DECAY MIDDY_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_REPEAT_DECAY\n    #define LEFT_MIDDY_REPEAT_DECAY MIDDY_REPEAT_DECAY\n    #endif\n\n    left_middy: homey_left_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_middy_bilateral: homey_left_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&left_middy_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    left_middy_hold: homey_left_middy_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftMiddy>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftMiddy>\n            ;\n    };\n    left_middy_tap: homey_left_middy_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp LEFT_MIDDY_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define LeftMiddy(key, layer_index) LeftMiddy_unroll(layer_index) (key)\n    #define LeftMiddy_unroll(layer_index) LeftMiddy_concat(LeftMiddy_layer, layer_index)\n    #define LeftMiddy_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define left_middy_layer0_variant left_middy_bilateral\n    #else\n    #define left_middy_layer0_variant left_middy\n    #endif\n    #define LeftMiddy_layer0(key) left_middy_layer0_variant LEFT_MIDDY_MOD key\n    #define LeftMiddy_layer1(key) left_middy LEFT_MIDDY_MOD key\n    #define LeftMiddy_layer2(key) left_middy LEFT_MIDDY_MOD key\n    #define LeftMiddy_layer3(key) left_middy LEFT_MIDDY_MOD key\n    #define LeftMiddy_layer4(key) left_middy LEFT_MIDDY_MOD key\n    #define LeftMiddy_layer5(key) left_middy LEFT_MIDDY_MOD key\n    #define LeftMiddy_layer6(key) left_middy LEFT_MIDDY_MOD key\n    #define LeftMiddy_layer7(key) left_middy LEFT_MIDDY_MOD key\n    #define LeftMiddy_layer8(key) left_middy LEFT_MIDDY_MOD key\n    #ifndef RIGHT_MIDDY_HOLDING_TYPE\n    #define RIGHT_MIDDY_HOLDING_TYPE MIDDY_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_HOLDING_TIME\n    #define RIGHT_MIDDY_HOLDING_TIME MIDDY_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_STREAK_DECAY\n    #define RIGHT_MIDDY_STREAK_DECAY MIDDY_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_REPEAT_DECAY\n    #define RIGHT_MIDDY_REPEAT_DECAY MIDDY_REPEAT_DECAY\n    #endif\n\n    right_middy: homey_right_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_middy_bilateral: homey_right_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&right_middy_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    right_middy_hold: homey_right_middy_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightMiddy>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightMiddy>\n            ;\n    };\n    right_middy_tap: homey_right_middy_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp RIGHT_MIDDY_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define RightMiddy(key, layer_index) RightMiddy_unroll(layer_index) (key)\n    #define RightMiddy_unroll(layer_index) RightMiddy_concat(RightMiddy_layer, layer_index)\n    #define RightMiddy_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define right_middy_layer0_variant right_middy_bilateral\n    #else\n    #define right_middy_layer0_variant right_middy\n    #endif\n    #define RightMiddy_layer0(key) right_middy_layer0_variant RIGHT_MIDDY_MOD key\n    #define RightMiddy_layer1(key) right_middy RIGHT_MIDDY_MOD key\n    #define RightMiddy_layer2(key) right_middy RIGHT_MIDDY_MOD key\n    #define RightMiddy_layer3(key) right_middy RIGHT_MIDDY_MOD key\n    #define RightMiddy_layer4(key) right_middy RIGHT_MIDDY_MOD key\n    #define RightMiddy_layer5(key) right_middy RIGHT_MIDDY_MOD key\n    #define RightMiddy_layer6(key) right_middy RIGHT_MIDDY_MOD key\n    #define RightMiddy_layer7(key) right_middy RIGHT_MIDDY_MOD key\n    #define RightMiddy_layer8(key) right_middy RIGHT_MIDDY_MOD key\n    #ifndef LEFT_INDEX_HOLDING_TYPE\n    #define LEFT_INDEX_HOLDING_TYPE INDEX_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_HOLDING_TIME\n    #define LEFT_INDEX_HOLDING_TIME INDEX_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_STREAK_DECAY\n    #define LEFT_INDEX_STREAK_DECAY INDEX_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_REPEAT_DECAY\n    #define LEFT_INDEX_REPEAT_DECAY INDEX_REPEAT_DECAY\n    #endif\n\n    left_index: homey_left_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_index_bilateral: homey_left_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&left_index_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    left_index_hold: homey_left_index_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftIndex>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftIndex>\n            ;\n    };\n    left_index_tap: homey_left_index_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp LEFT_INDEX_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define LeftIndex(key, layer_index) LeftIndex_unroll(layer_index) (key)\n    #define LeftIndex_unroll(layer_index) LeftIndex_concat(LeftIndex_layer, layer_index)\n    #define LeftIndex_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define left_index_layer0_variant left_index_bilateral\n    #else\n    #define left_index_layer0_variant left_index\n    #endif\n    #define LeftIndex_layer0(key) left_index_layer0_variant LEFT_INDEX_MOD key\n    #define LeftIndex_layer1(key) left_index LEFT_INDEX_MOD key\n    #define LeftIndex_layer2(key) left_index LEFT_INDEX_MOD key\n    #define LeftIndex_layer3(key) left_index LEFT_INDEX_MOD key\n    #define LeftIndex_layer4(key) left_index LEFT_INDEX_MOD key\n    #define LeftIndex_layer5(key) left_index LEFT_INDEX_MOD key\n    #define LeftIndex_layer6(key) left_index LEFT_INDEX_MOD key\n    #define LeftIndex_layer7(key) left_index LEFT_INDEX_MOD key\n    #define LeftIndex_layer8(key) left_index LEFT_INDEX_MOD key\n    #ifndef RIGHT_INDEX_HOLDING_TYPE\n    #define RIGHT_INDEX_HOLDING_TYPE INDEX_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_HOLDING_TIME\n    #define RIGHT_INDEX_HOLDING_TIME INDEX_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_STREAK_DECAY\n    #define RIGHT_INDEX_STREAK_DECAY INDEX_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_REPEAT_DECAY\n    #define RIGHT_INDEX_REPEAT_DECAY INDEX_REPEAT_DECAY\n    #endif\n\n    right_index: homey_right_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_index_bilateral: homey_right_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&right_index_hold>, <&kp>;\n    };\n    #endif\n    #ifdef ENFORCE_BILATERAL\n    right_index_hold: homey_right_index_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightIndex>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightIndex>\n            ;\n    };\n    right_index_tap: homey_right_index_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp RGUI>\n            , <&macro_tap &kp RIGHT_INDEX_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #endif\n    #define RightIndex(key, layer_index) RightIndex_unroll(layer_index) (key)\n    #define RightIndex_unroll(layer_index) RightIndex_concat(RightIndex_layer, layer_index)\n    #define RightIndex_concat(prefix, layer_index) prefix ## layer_index\n    #ifdef ENFORCE_BILATERAL\n    #define right_index_layer0_variant right_index_bilateral\n    #else\n    #define right_index_layer0_variant right_index\n    #endif\n    #define RightIndex_layer0(key) right_index_layer0_variant RIGHT_INDEX_MOD key\n    #define RightIndex_layer1(key) right_index RIGHT_INDEX_MOD key\n    #define RightIndex_layer2(key) right_index RIGHT_INDEX_MOD key\n    #define RightIndex_layer3(key) right_index RIGHT_INDEX_MOD key\n    #define RightIndex_layer4(key) right_index RIGHT_INDEX_MOD key\n    #define RightIndex_layer5(key) right_index RIGHT_INDEX_MOD key\n    #define RightIndex_layer6(key) right_index RIGHT_INDEX_MOD key\n    #define RightIndex_layer7(key) right_index RIGHT_INDEX_MOD key\n    #define RightIndex_layer8(key) right_index RIGHT_INDEX_MOD key\n    #ifndef LEFT_RING1_PINKY_HOLDING_TYPE\n    #define LEFT_RING1_PINKY_HOLDING_TYPE LEFT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_PINKY_HOLDING_TIME\n    #define LEFT_RING1_PINKY_HOLDING_TIME LEFT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_PINKY_STREAK_DECAY\n    #define LEFT_RING1_PINKY_STREAK_DECAY LEFT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_PINKY_REPEAT_DECAY\n    #define LEFT_RING1_PINKY_REPEAT_DECAY LEFT_RING1_CHORD_REPEAT_DECAY\n    #endif\n\n    left_ring1_pinky: homey_left_ring1_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring1_pinky_bilateral: homey_left_ring1_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_ring1_tap>;\n    };\n    #endif\n    #define LeftRing1Pinky left_ring1_pinky_bilateral LEFT_PINKY_MOD LEFT_PINKY_KEY\n    #ifndef LEFT_RING2_PINKY_HOLDING_TYPE\n    #define LEFT_RING2_PINKY_HOLDING_TYPE LEFT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_PINKY_HOLDING_TIME\n    #define LEFT_RING2_PINKY_HOLDING_TIME LEFT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_PINKY_STREAK_DECAY\n    #define LEFT_RING2_PINKY_STREAK_DECAY LEFT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_PINKY_REPEAT_DECAY\n    #define LEFT_RING2_PINKY_REPEAT_DECAY LEFT_RING2_CHORD_REPEAT_DECAY\n    #endif\n\n    left_ring2_pinky: homey_left_ring2_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring2_pinky_bilateral: homey_left_ring2_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_ring2_tap>;\n    };\n    #endif\n    #define LeftRing2Pinky left_ring2_pinky_bilateral LEFT_PINKY_MOD LEFT_PINKY_KEY\n    #ifndef LEFT_MIDDY_PINKY_HOLDING_TYPE\n    #define LEFT_MIDDY_PINKY_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_PINKY_HOLDING_TIME\n    #define LEFT_MIDDY_PINKY_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_PINKY_STREAK_DECAY\n    #define LEFT_MIDDY_PINKY_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_PINKY_REPEAT_DECAY\n    #define LEFT_MIDDY_PINKY_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n\n    left_middy_pinky: homey_left_middy_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_middy_pinky_bilateral: homey_left_middy_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_middy_tap>;\n    };\n    #endif\n    #define LeftMiddyPinky left_middy_pinky_bilateral LEFT_PINKY_MOD LEFT_PINKY_KEY\n    #ifndef LEFT_INDEX_PINKY_HOLDING_TYPE\n    #define LEFT_INDEX_PINKY_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_PINKY_HOLDING_TIME\n    #define LEFT_INDEX_PINKY_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_PINKY_STREAK_DECAY\n    #define LEFT_INDEX_PINKY_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_PINKY_REPEAT_DECAY\n    #define LEFT_INDEX_PINKY_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n\n    left_index_pinky: homey_left_index_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_index_pinky_bilateral: homey_left_index_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_index_tap>;\n    };\n    #endif\n    #define LeftIndexPinky left_index_pinky_bilateral LEFT_PINKY_MOD LEFT_PINKY_KEY\n    #ifndef RIGHT_RING1_PINKY_HOLDING_TYPE\n    #define RIGHT_RING1_PINKY_HOLDING_TYPE RIGHT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_PINKY_HOLDING_TIME\n    #define RIGHT_RING1_PINKY_HOLDING_TIME RIGHT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_PINKY_STREAK_DECAY\n    #define RIGHT_RING1_PINKY_STREAK_DECAY RIGHT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_PINKY_REPEAT_DECAY\n    #define RIGHT_RING1_PINKY_REPEAT_DECAY RIGHT_RING1_CHORD_REPEAT_DECAY\n    #endif\n\n    right_ring1_pinky: homey_right_ring1_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring1_pinky_bilateral: homey_right_ring1_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_ring1_tap>;\n    };\n    #endif\n    #define RightRing1Pinky right_ring1_pinky_bilateral RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n    #ifndef RIGHT_RING2_PINKY_HOLDING_TYPE\n    #define RIGHT_RING2_PINKY_HOLDING_TYPE RIGHT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_PINKY_HOLDING_TIME\n    #define RIGHT_RING2_PINKY_HOLDING_TIME RIGHT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_PINKY_STREAK_DECAY\n    #define RIGHT_RING2_PINKY_STREAK_DECAY RIGHT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_PINKY_REPEAT_DECAY\n    #define RIGHT_RING2_PINKY_REPEAT_DECAY RIGHT_RING2_CHORD_REPEAT_DECAY\n    #endif\n\n    right_ring2_pinky: homey_right_ring2_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring2_pinky_bilateral: homey_right_ring2_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_ring2_tap>;\n    };\n    #endif\n    #define RightRing2Pinky right_ring2_pinky_bilateral RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n    #ifndef RIGHT_MIDDY_PINKY_HOLDING_TYPE\n    #define RIGHT_MIDDY_PINKY_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_PINKY_HOLDING_TIME\n    #define RIGHT_MIDDY_PINKY_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_PINKY_STREAK_DECAY\n    #define RIGHT_MIDDY_PINKY_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_PINKY_REPEAT_DECAY\n    #define RIGHT_MIDDY_PINKY_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n\n    right_middy_pinky: homey_right_middy_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_middy_pinky_bilateral: homey_right_middy_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_middy_tap>;\n    };\n    #endif\n    #define RightMiddyPinky right_middy_pinky_bilateral RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n    #ifndef RIGHT_INDEX_PINKY_HOLDING_TYPE\n    #define RIGHT_INDEX_PINKY_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_PINKY_HOLDING_TIME\n    #define RIGHT_INDEX_PINKY_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_PINKY_STREAK_DECAY\n    #define RIGHT_INDEX_PINKY_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_PINKY_REPEAT_DECAY\n    #define RIGHT_INDEX_PINKY_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n\n    right_index_pinky: homey_right_index_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_index_pinky_bilateral: homey_right_index_pinky_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_index_tap>;\n    };\n    #endif\n    #define RightIndexPinky right_index_pinky_bilateral RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n    #ifndef LEFT_PINKY_RING1_HOLDING_TYPE\n    #define LEFT_PINKY_RING1_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_RING1_HOLDING_TIME\n    #define LEFT_PINKY_RING1_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_RING1_STREAK_DECAY\n    #define LEFT_PINKY_RING1_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_RING1_REPEAT_DECAY\n    #define LEFT_PINKY_RING1_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n\n    left_pinky_ring1: homey_left_pinky_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_pinky_ring1_bilateral: homey_left_pinky_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_pinky_tap>;\n    };\n    #endif\n    #define LeftPinkyRing1 left_pinky_ring1_bilateral LEFT_RING1_MOD LEFT_RING1_KEY\n    #ifndef LEFT_RING2_RING1_HOLDING_TYPE\n    #define LEFT_RING2_RING1_HOLDING_TYPE LEFT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_RING1_HOLDING_TIME\n    #define LEFT_RING2_RING1_HOLDING_TIME LEFT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_RING1_STREAK_DECAY\n    #define LEFT_RING2_RING1_STREAK_DECAY LEFT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_RING1_REPEAT_DECAY\n    #define LEFT_RING2_RING1_REPEAT_DECAY LEFT_RING2_CHORD_REPEAT_DECAY\n    #endif\n\n    left_ring2_ring1: homey_left_ring2_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring2_ring1_bilateral: homey_left_ring2_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_ring2_tap>;\n    };\n    #endif\n    #define LeftRing2Ring1 left_ring2_ring1_bilateral LEFT_RING1_MOD LEFT_RING1_KEY\n    #ifndef LEFT_MIDDY_RING1_HOLDING_TYPE\n    #define LEFT_MIDDY_RING1_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_RING1_HOLDING_TIME\n    #define LEFT_MIDDY_RING1_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_RING1_STREAK_DECAY\n    #define LEFT_MIDDY_RING1_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_RING1_REPEAT_DECAY\n    #define LEFT_MIDDY_RING1_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n\n    left_middy_ring1: homey_left_middy_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_middy_ring1_bilateral: homey_left_middy_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_middy_tap>;\n    };\n    #endif\n    #define LeftMiddyRing1 left_middy_ring1_bilateral LEFT_RING1_MOD LEFT_RING1_KEY\n    #ifndef LEFT_INDEX_RING1_HOLDING_TYPE\n    #define LEFT_INDEX_RING1_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_RING1_HOLDING_TIME\n    #define LEFT_INDEX_RING1_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_RING1_STREAK_DECAY\n    #define LEFT_INDEX_RING1_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_RING1_REPEAT_DECAY\n    #define LEFT_INDEX_RING1_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n\n    left_index_ring1: homey_left_index_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_index_ring1_bilateral: homey_left_index_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_index_tap>;\n    };\n    #endif\n    #define LeftIndexRing1 left_index_ring1_bilateral LEFT_RING1_MOD LEFT_RING1_KEY\n    #ifndef RIGHT_PINKY_RING1_HOLDING_TYPE\n    #define RIGHT_PINKY_RING1_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_RING1_HOLDING_TIME\n    #define RIGHT_PINKY_RING1_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_RING1_STREAK_DECAY\n    #define RIGHT_PINKY_RING1_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_RING1_REPEAT_DECAY\n    #define RIGHT_PINKY_RING1_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n\n    right_pinky_ring1: homey_right_pinky_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_pinky_ring1_bilateral: homey_right_pinky_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_pinky_tap>;\n    };\n    #endif\n    #define RightPinkyRing1 right_pinky_ring1_bilateral RIGHT_RING1_MOD RIGHT_RING1_KEY\n    #ifndef RIGHT_RING2_RING1_HOLDING_TYPE\n    #define RIGHT_RING2_RING1_HOLDING_TYPE RIGHT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_RING1_HOLDING_TIME\n    #define RIGHT_RING2_RING1_HOLDING_TIME RIGHT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_RING1_STREAK_DECAY\n    #define RIGHT_RING2_RING1_STREAK_DECAY RIGHT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_RING1_REPEAT_DECAY\n    #define RIGHT_RING2_RING1_REPEAT_DECAY RIGHT_RING2_CHORD_REPEAT_DECAY\n    #endif\n\n    right_ring2_ring1: homey_right_ring2_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring2_ring1_bilateral: homey_right_ring2_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_ring2_tap>;\n    };\n    #endif\n    #define RightRing2Ring1 right_ring2_ring1_bilateral RIGHT_RING1_MOD RIGHT_RING1_KEY\n    #ifndef RIGHT_MIDDY_RING1_HOLDING_TYPE\n    #define RIGHT_MIDDY_RING1_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_RING1_HOLDING_TIME\n    #define RIGHT_MIDDY_RING1_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_RING1_STREAK_DECAY\n    #define RIGHT_MIDDY_RING1_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_RING1_REPEAT_DECAY\n    #define RIGHT_MIDDY_RING1_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n\n    right_middy_ring1: homey_right_middy_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_middy_ring1_bilateral: homey_right_middy_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_middy_tap>;\n    };\n    #endif\n    #define RightMiddyRing1 right_middy_ring1_bilateral RIGHT_RING1_MOD RIGHT_RING1_KEY\n    #ifndef RIGHT_INDEX_RING1_HOLDING_TYPE\n    #define RIGHT_INDEX_RING1_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_RING1_HOLDING_TIME\n    #define RIGHT_INDEX_RING1_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_RING1_STREAK_DECAY\n    #define RIGHT_INDEX_RING1_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_RING1_REPEAT_DECAY\n    #define RIGHT_INDEX_RING1_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n\n    right_index_ring1: homey_right_index_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_index_ring1_bilateral: homey_right_index_ring1_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_index_tap>;\n    };\n    #endif\n    #define RightIndexRing1 right_index_ring1_bilateral RIGHT_RING1_MOD RIGHT_RING1_KEY\n    #ifndef LEFT_PINKY_RING2_HOLDING_TYPE\n    #define LEFT_PINKY_RING2_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_RING2_HOLDING_TIME\n    #define LEFT_PINKY_RING2_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_RING2_STREAK_DECAY\n    #define LEFT_PINKY_RING2_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_RING2_REPEAT_DECAY\n    #define LEFT_PINKY_RING2_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n\n    left_pinky_ring2: homey_left_pinky_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_pinky_ring2_bilateral: homey_left_pinky_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_pinky_tap>;\n    };\n    #endif\n    #define LeftPinkyRing2 left_pinky_ring2_bilateral LEFT_RING2_MOD LEFT_RING2_KEY\n    #ifndef LEFT_RING1_RING2_HOLDING_TYPE\n    #define LEFT_RING1_RING2_HOLDING_TYPE LEFT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_RING2_HOLDING_TIME\n    #define LEFT_RING1_RING2_HOLDING_TIME LEFT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_RING2_STREAK_DECAY\n    #define LEFT_RING1_RING2_STREAK_DECAY LEFT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_RING2_REPEAT_DECAY\n    #define LEFT_RING1_RING2_REPEAT_DECAY LEFT_RING1_CHORD_REPEAT_DECAY\n    #endif\n\n    left_ring1_ring2: homey_left_ring1_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring1_ring2_bilateral: homey_left_ring1_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_ring1_tap>;\n    };\n    #endif\n    #define LeftRing1Ring2 left_ring1_ring2_bilateral LEFT_RING2_MOD LEFT_RING2_KEY\n    #ifndef LEFT_MIDDY_RING2_HOLDING_TYPE\n    #define LEFT_MIDDY_RING2_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_RING2_HOLDING_TIME\n    #define LEFT_MIDDY_RING2_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_RING2_STREAK_DECAY\n    #define LEFT_MIDDY_RING2_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_RING2_REPEAT_DECAY\n    #define LEFT_MIDDY_RING2_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n\n    left_middy_ring2: homey_left_middy_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_middy_ring2_bilateral: homey_left_middy_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_middy_tap>;\n    };\n    #endif\n    #define LeftMiddyRing2 left_middy_ring2_bilateral LEFT_RING2_MOD LEFT_RING2_KEY\n    #ifndef LEFT_INDEX_RING2_HOLDING_TYPE\n    #define LEFT_INDEX_RING2_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_RING2_HOLDING_TIME\n    #define LEFT_INDEX_RING2_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_RING2_STREAK_DECAY\n    #define LEFT_INDEX_RING2_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_RING2_REPEAT_DECAY\n    #define LEFT_INDEX_RING2_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n\n    left_index_ring2: homey_left_index_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_index_ring2_bilateral: homey_left_index_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_index_tap>;\n    };\n    #endif\n    #define LeftIndexRing2 left_index_ring2_bilateral LEFT_RING2_MOD LEFT_RING2_KEY\n    #ifndef RIGHT_PINKY_RING2_HOLDING_TYPE\n    #define RIGHT_PINKY_RING2_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_RING2_HOLDING_TIME\n    #define RIGHT_PINKY_RING2_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_RING2_STREAK_DECAY\n    #define RIGHT_PINKY_RING2_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_RING2_REPEAT_DECAY\n    #define RIGHT_PINKY_RING2_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n\n    right_pinky_ring2: homey_right_pinky_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_pinky_ring2_bilateral: homey_right_pinky_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_pinky_tap>;\n    };\n    #endif\n    #define RightPinkyRing2 right_pinky_ring2_bilateral RIGHT_RING2_MOD RIGHT_RING2_KEY\n    #ifndef RIGHT_RING1_RING2_HOLDING_TYPE\n    #define RIGHT_RING1_RING2_HOLDING_TYPE RIGHT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_RING2_HOLDING_TIME\n    #define RIGHT_RING1_RING2_HOLDING_TIME RIGHT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_RING2_STREAK_DECAY\n    #define RIGHT_RING1_RING2_STREAK_DECAY RIGHT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_RING2_REPEAT_DECAY\n    #define RIGHT_RING1_RING2_REPEAT_DECAY RIGHT_RING1_CHORD_REPEAT_DECAY\n    #endif\n\n    right_ring1_ring2: homey_right_ring1_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring1_ring2_bilateral: homey_right_ring1_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_ring1_tap>;\n    };\n    #endif\n    #define RightRing1Ring2 right_ring1_ring2_bilateral RIGHT_RING2_MOD RIGHT_RING2_KEY\n    #ifndef RIGHT_MIDDY_RING2_HOLDING_TYPE\n    #define RIGHT_MIDDY_RING2_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_RING2_HOLDING_TIME\n    #define RIGHT_MIDDY_RING2_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_RING2_STREAK_DECAY\n    #define RIGHT_MIDDY_RING2_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_RING2_REPEAT_DECAY\n    #define RIGHT_MIDDY_RING2_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n\n    right_middy_ring2: homey_right_middy_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_middy_ring2_bilateral: homey_right_middy_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_middy_tap>;\n    };\n    #endif\n    #define RightMiddyRing2 right_middy_ring2_bilateral RIGHT_RING2_MOD RIGHT_RING2_KEY\n    #ifndef RIGHT_INDEX_RING2_HOLDING_TYPE\n    #define RIGHT_INDEX_RING2_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_RING2_HOLDING_TIME\n    #define RIGHT_INDEX_RING2_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_RING2_STREAK_DECAY\n    #define RIGHT_INDEX_RING2_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_RING2_REPEAT_DECAY\n    #define RIGHT_INDEX_RING2_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n\n    right_index_ring2: homey_right_index_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_index_ring2_bilateral: homey_right_index_ring2_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_index_tap>;\n    };\n    #endif\n    #define RightIndexRing2 right_index_ring2_bilateral RIGHT_RING2_MOD RIGHT_RING2_KEY\n    #ifndef LEFT_PINKY_MIDDY_HOLDING_TYPE\n    #define LEFT_PINKY_MIDDY_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_MIDDY_HOLDING_TIME\n    #define LEFT_PINKY_MIDDY_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_MIDDY_STREAK_DECAY\n    #define LEFT_PINKY_MIDDY_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_MIDDY_REPEAT_DECAY\n    #define LEFT_PINKY_MIDDY_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n\n    left_pinky_middy: homey_left_pinky_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_pinky_middy_bilateral: homey_left_pinky_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_pinky_tap>;\n    };\n    #endif\n    #define LeftPinkyMiddy left_pinky_middy_bilateral LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n    #ifndef LEFT_RING1_MIDDY_HOLDING_TYPE\n    #define LEFT_RING1_MIDDY_HOLDING_TYPE LEFT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_MIDDY_HOLDING_TIME\n    #define LEFT_RING1_MIDDY_HOLDING_TIME LEFT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_MIDDY_STREAK_DECAY\n    #define LEFT_RING1_MIDDY_STREAK_DECAY LEFT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_MIDDY_REPEAT_DECAY\n    #define LEFT_RING1_MIDDY_REPEAT_DECAY LEFT_RING1_CHORD_REPEAT_DECAY\n    #endif\n\n    left_ring1_middy: homey_left_ring1_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring1_middy_bilateral: homey_left_ring1_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_ring1_tap>;\n    };\n    #endif\n    #define LeftRing1Middy left_ring1_middy_bilateral LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n    #ifndef LEFT_RING2_MIDDY_HOLDING_TYPE\n    #define LEFT_RING2_MIDDY_HOLDING_TYPE LEFT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_MIDDY_HOLDING_TIME\n    #define LEFT_RING2_MIDDY_HOLDING_TIME LEFT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_MIDDY_STREAK_DECAY\n    #define LEFT_RING2_MIDDY_STREAK_DECAY LEFT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_MIDDY_REPEAT_DECAY\n    #define LEFT_RING2_MIDDY_REPEAT_DECAY LEFT_RING2_CHORD_REPEAT_DECAY\n    #endif\n\n    left_ring2_middy: homey_left_ring2_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring2_middy_bilateral: homey_left_ring2_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_ring2_tap>;\n    };\n    #endif\n    #define LeftRing2Middy left_ring2_middy_bilateral LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n    #ifndef LEFT_INDEX_MIDDY_HOLDING_TYPE\n    #define LEFT_INDEX_MIDDY_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_MIDDY_HOLDING_TIME\n    #define LEFT_INDEX_MIDDY_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_MIDDY_STREAK_DECAY\n    #define LEFT_INDEX_MIDDY_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_MIDDY_REPEAT_DECAY\n    #define LEFT_INDEX_MIDDY_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n\n    left_index_middy: homey_left_index_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_index_middy_bilateral: homey_left_index_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_index_tap>;\n    };\n    #endif\n    #define LeftIndexMiddy left_index_middy_bilateral LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n    #ifndef RIGHT_PINKY_MIDDY_HOLDING_TYPE\n    #define RIGHT_PINKY_MIDDY_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_MIDDY_HOLDING_TIME\n    #define RIGHT_PINKY_MIDDY_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_MIDDY_STREAK_DECAY\n    #define RIGHT_PINKY_MIDDY_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_MIDDY_REPEAT_DECAY\n    #define RIGHT_PINKY_MIDDY_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n\n    right_pinky_middy: homey_right_pinky_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_pinky_middy_bilateral: homey_right_pinky_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_pinky_tap>;\n    };\n    #endif\n    #define RightPinkyMiddy right_pinky_middy_bilateral RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n    #ifndef RIGHT_RING1_MIDDY_HOLDING_TYPE\n    #define RIGHT_RING1_MIDDY_HOLDING_TYPE RIGHT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_MIDDY_HOLDING_TIME\n    #define RIGHT_RING1_MIDDY_HOLDING_TIME RIGHT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_MIDDY_STREAK_DECAY\n    #define RIGHT_RING1_MIDDY_STREAK_DECAY RIGHT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_MIDDY_REPEAT_DECAY\n    #define RIGHT_RING1_MIDDY_REPEAT_DECAY RIGHT_RING1_CHORD_REPEAT_DECAY\n    #endif\n\n    right_ring1_middy: homey_right_ring1_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring1_middy_bilateral: homey_right_ring1_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_ring1_tap>;\n    };\n    #endif\n    #define RightRing1Middy right_ring1_middy_bilateral RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n    #ifndef RIGHT_RING2_MIDDY_HOLDING_TYPE\n    #define RIGHT_RING2_MIDDY_HOLDING_TYPE RIGHT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_MIDDY_HOLDING_TIME\n    #define RIGHT_RING2_MIDDY_HOLDING_TIME RIGHT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_MIDDY_STREAK_DECAY\n    #define RIGHT_RING2_MIDDY_STREAK_DECAY RIGHT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_MIDDY_REPEAT_DECAY\n    #define RIGHT_RING2_MIDDY_REPEAT_DECAY RIGHT_RING2_CHORD_REPEAT_DECAY\n    #endif\n\n    right_ring2_middy: homey_right_ring2_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring2_middy_bilateral: homey_right_ring2_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_ring2_tap>;\n    };\n    #endif\n    #define RightRing2Middy right_ring2_middy_bilateral RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n    #ifndef RIGHT_INDEX_MIDDY_HOLDING_TYPE\n    #define RIGHT_INDEX_MIDDY_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_MIDDY_HOLDING_TIME\n    #define RIGHT_INDEX_MIDDY_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_MIDDY_STREAK_DECAY\n    #define RIGHT_INDEX_MIDDY_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_MIDDY_REPEAT_DECAY\n    #define RIGHT_INDEX_MIDDY_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n\n    right_index_middy: homey_right_index_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_index_middy_bilateral: homey_right_index_middy_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_index_tap>;\n    };\n    #endif\n    #define RightIndexMiddy right_index_middy_bilateral RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n    #ifndef LEFT_PINKY_INDEX_HOLDING_TYPE\n    #define LEFT_PINKY_INDEX_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_INDEX_HOLDING_TIME\n    #define LEFT_PINKY_INDEX_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_INDEX_STREAK_DECAY\n    #define LEFT_PINKY_INDEX_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_INDEX_REPEAT_DECAY\n    #define LEFT_PINKY_INDEX_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n\n    left_pinky_index: homey_left_pinky_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_pinky_index_bilateral: homey_left_pinky_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_pinky_tap>;\n    };\n    #endif\n    #define LeftPinkyIndex left_pinky_index_bilateral LEFT_INDEX_MOD LEFT_INDEX_KEY\n    #ifndef LEFT_RING1_INDEX_HOLDING_TYPE\n    #define LEFT_RING1_INDEX_HOLDING_TYPE LEFT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_INDEX_HOLDING_TIME\n    #define LEFT_RING1_INDEX_HOLDING_TIME LEFT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_INDEX_STREAK_DECAY\n    #define LEFT_RING1_INDEX_STREAK_DECAY LEFT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_INDEX_REPEAT_DECAY\n    #define LEFT_RING1_INDEX_REPEAT_DECAY LEFT_RING1_CHORD_REPEAT_DECAY\n    #endif\n\n    left_ring1_index: homey_left_ring1_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring1_index_bilateral: homey_left_ring1_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_ring1_tap>;\n    };\n    #endif\n    #define LeftRing1Index left_ring1_index_bilateral LEFT_INDEX_MOD LEFT_INDEX_KEY\n    #ifndef LEFT_RING2_INDEX_HOLDING_TYPE\n    #define LEFT_RING2_INDEX_HOLDING_TYPE LEFT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_INDEX_HOLDING_TIME\n    #define LEFT_RING2_INDEX_HOLDING_TIME LEFT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_INDEX_STREAK_DECAY\n    #define LEFT_RING2_INDEX_STREAK_DECAY LEFT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_INDEX_REPEAT_DECAY\n    #define LEFT_RING2_INDEX_REPEAT_DECAY LEFT_RING2_CHORD_REPEAT_DECAY\n    #endif\n\n    left_ring2_index: homey_left_ring2_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_ring2_index_bilateral: homey_left_ring2_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_ring2_tap>;\n    };\n    #endif\n    #define LeftRing2Index left_ring2_index_bilateral LEFT_INDEX_MOD LEFT_INDEX_KEY\n    #ifndef LEFT_MIDDY_INDEX_HOLDING_TYPE\n    #define LEFT_MIDDY_INDEX_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_INDEX_HOLDING_TIME\n    #define LEFT_MIDDY_INDEX_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_INDEX_STREAK_DECAY\n    #define LEFT_MIDDY_INDEX_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_INDEX_REPEAT_DECAY\n    #define LEFT_MIDDY_INDEX_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n\n    left_middy_index: homey_left_middy_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    left_middy_index_bilateral: homey_left_middy_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&left_middy_tap>;\n    };\n    #endif\n    #define LeftMiddyIndex left_middy_index_bilateral LEFT_INDEX_MOD LEFT_INDEX_KEY\n    #ifndef RIGHT_PINKY_INDEX_HOLDING_TYPE\n    #define RIGHT_PINKY_INDEX_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_INDEX_HOLDING_TIME\n    #define RIGHT_PINKY_INDEX_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_INDEX_STREAK_DECAY\n    #define RIGHT_PINKY_INDEX_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_INDEX_REPEAT_DECAY\n    #define RIGHT_PINKY_INDEX_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n\n    right_pinky_index: homey_right_pinky_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_pinky_index_bilateral: homey_right_pinky_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_pinky_tap>;\n    };\n    #endif\n    #define RightPinkyIndex right_pinky_index_bilateral RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n    #ifndef RIGHT_RING1_INDEX_HOLDING_TYPE\n    #define RIGHT_RING1_INDEX_HOLDING_TYPE RIGHT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_INDEX_HOLDING_TIME\n    #define RIGHT_RING1_INDEX_HOLDING_TIME RIGHT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_INDEX_STREAK_DECAY\n    #define RIGHT_RING1_INDEX_STREAK_DECAY RIGHT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_INDEX_REPEAT_DECAY\n    #define RIGHT_RING1_INDEX_REPEAT_DECAY RIGHT_RING1_CHORD_REPEAT_DECAY\n    #endif\n\n    right_ring1_index: homey_right_ring1_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring1_index_bilateral: homey_right_ring1_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_ring1_tap>;\n    };\n    #endif\n    #define RightRing1Index right_ring1_index_bilateral RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n    #ifndef RIGHT_RING2_INDEX_HOLDING_TYPE\n    #define RIGHT_RING2_INDEX_HOLDING_TYPE RIGHT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_INDEX_HOLDING_TIME\n    #define RIGHT_RING2_INDEX_HOLDING_TIME RIGHT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_INDEX_STREAK_DECAY\n    #define RIGHT_RING2_INDEX_STREAK_DECAY RIGHT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_INDEX_REPEAT_DECAY\n    #define RIGHT_RING2_INDEX_REPEAT_DECAY RIGHT_RING2_CHORD_REPEAT_DECAY\n    #endif\n\n    right_ring2_index: homey_right_ring2_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_ring2_index_bilateral: homey_right_ring2_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_ring2_tap>;\n    };\n    #endif\n    #define RightRing2Index right_ring2_index_bilateral RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n    #ifndef RIGHT_MIDDY_INDEX_HOLDING_TYPE\n    #define RIGHT_MIDDY_INDEX_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_INDEX_HOLDING_TIME\n    #define RIGHT_MIDDY_INDEX_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_INDEX_STREAK_DECAY\n    #define RIGHT_MIDDY_INDEX_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_INDEX_REPEAT_DECAY\n    #define RIGHT_MIDDY_INDEX_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n\n    right_middy_index: homey_right_middy_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    #ifdef ENFORCE_BILATERAL\n    right_middy_index_bilateral: homey_right_middy_index_bilateral {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&right_middy_tap>;\n    };\n    #endif\n    #define RightMiddyIndex right_middy_index_bilateral RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n\n    //\n    // Key repetition access keys on the index fingers\n    //\n    plain: plain_typing_layer {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = PLAIN_HOLDING_TYPE;\n        tapping-term-ms = <PLAIN_HOLDING_TIME>;\n        quick-tap-ms = <PLAIN_REPEAT_DECAY>; // enable repeat\n        require-prior-idle-ms = <PLAIN_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n        retro-tap; // tap on standalone hold\n    };\n    plain_engram_COMMA: plain_typing_layer_engram_COMMA {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = PLAIN_HOLDING_TYPE;\n        tapping-term-ms = <PLAIN_HOLDING_TIME>;\n        quick-tap-ms = <PLAIN_REPEAT_DECAY>; // enable repeat\n        require-prior-idle-ms = <PLAIN_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&mo>, <&engram_COMMA>;\n        retro-tap; // tap on standalone hold\n    };\n    plain_engram_DOT: plain_typing_layer_engram_DOT {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = PLAIN_HOLDING_TYPE;\n        tapping-term-ms = <PLAIN_HOLDING_TIME>;\n        quick-tap-ms = <PLAIN_REPEAT_DECAY>; // enable repeat\n        require-prior-idle-ms = <PLAIN_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&mo>, <&engram_DOT>;\n        retro-tap; // tap on standalone hold\n    };\n\n    //\n    // Thumb cluster hold-tap keys for Miryoku layers\n    //\n    thumb: thumb_layer_access {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = THUMB_HOLDING_TYPE;\n        tapping-term-ms = <THUMB_HOLDING_TIME>;\n        quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n    };\n    thumb_parang_left: thumb_layer_access_parang_left {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = THUMB_HOLDING_TYPE;\n        tapping-term-ms = <THUMB_HOLDING_TIME>;\n        quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n        #binding-cells = <2>;\n        bindings = <&mo>, <&parang_left>;\n    };\n    thumb_lower_shift: lower_layer_or_sticky_shift {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = \"tap-preferred\";\n        tapping-term-ms = <THUMB_HOLDING_TIME>;\n        #binding-cells = <2>;\n        bindings = <&mo>, <&sticky_key_oneshot>;\n    };\n    space: thumb_layer_access_spacebar {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = SPACE_HOLDING_TYPE;\n        tapping-term-ms = <SPACE_HOLDING_TIME>;\n        quick-tap-ms = <SPACE_REPEAT_DECAY>; // enable repeat\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n    };\n\n    //\n    // Shift + LEFT_PARENTHESIS = LESS_THAN\n    //\n    parang_left: left_parenthesis_and_less_than {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp LPAR>, <&kp LT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n\n    //\n    // Shift + RIGHT_PARENTHESIS = GREATER_THAN\n    //\n    parang_right: right_parenthesis_and_greater_than {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp RPAR>, <&kp GT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n\n    //\n    // Custom shifted pairs for the Engram layout\n    // - https://engram.dev/\n    // - https://sunaku.github.io/engram-keyboard-layout.html\n    //\n    engram_N1: engram_shift_N1_PIPE {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N1>, <&kp PIPE>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N2: engram_shift_N2_EQUAL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N2>, <&kp EQUAL>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N3: engram_shift_N3_TILDE {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N3>, <&kp TILDE>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N4: engram_shift_N4_PLUS {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N4>, <&kp PLUS>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N5: engram_shift_N5_LT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N5>, <&kp LT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N6: engram_shift_N6_GT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N6>, <&kp GT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N7: engram_shift_N7_CARET {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N7>, <&kp CARET>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N8: engram_shift_N8_AMPS {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N8>, <&kp AMPS>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N9: engram_shift_N9_PRCNT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N9>, <&kp PRCNT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N0: engram_shift_N0_STAR {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N0>, <&kp STAR>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_SQT: engram_shift_SQT_LPAR {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp SQT>, <&kp LPAR>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_DQT: engram_shift_DQT_RPAR {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp DQT>, <&kp RPAR>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_COMMA: engram_shift_COMMA_SEMI {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp COMMA>, <&kp SEMI>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_DOT: engram_shift_DOT_COLON {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp DOT>, <&kp COLON>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_QMARK: engram_shift_QMARK_EXCL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp QMARK>, <&kp EXCL>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_HASH: engram_shift_HASH_DLLR {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp HASH>, <&kp DLLR>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_AT: engram_shift_AT_GRAVE {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp AT>, <&kp GRAVE>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_FSLH: engram_shift_FSLH_BSLH {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp FSLH>, <&kp BSLH>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // &sk (sticky key) variant that is truly one-shot\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // STICKY_1SHOT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a sticky key before it expires (won't apply to next tap).\n    //\n    #ifndef STICKY_1SHOT_DECAY\n    #define STICKY_1SHOT_DECAY 500\n    #endif\n\n    sticky_key_oneshot: sticky_key_oneshot_macro {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_tap &sticky_key_quickrel MACRO_PLACEHOLDER>\n            ;\n    };\n    sticky_key_quickrel: sticky_key_quick_release {\n        compatible = \"zmk,behavior-sticky-key\";\n        #binding-cells = <1>;\n        bindings = <&kp>;\n        release-after-ms = <STICKY_1SHOT_DECAY>;\n        quick-release;\n        ignore-modifiers;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // ZMK global overrides\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // CapsWord - ported from Pascal Getreuer's extension for QMK\n    // - https://zmk.dev/docs/behaviors/caps-word\n    // - https://getreuer.info/posts/keyboards/caps-word/index.html\n    //\n    behavior_caps_word {\n        continue-list = <\n            UNDERSCORE MINUS\n            BACKSPACE DELETE\n            N1 N2 N3 N4 N5 N6 N7 N8 N9 N0\n        >;\n    };\n\n};\n\nmacros {\n\n    //\n    // Linux Magic System Request Key - hold this down and type REISUB\n    // - https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html\n    // - https://github.com/manna-harbour/miryoku/discussions/259\n    //\n    ZMK_MACRO(linux_magic_sysrq,\n        wait-ms = <0>;\n        tap-ms = <0>;\n        bindings\n            = <&macro_press &mo 0 &kp RALT>\n            , <&macro_tap &kp PRINTSCREEN>\n            , <&macro_pause_for_release>\n            , <&macro_release &mo 0 &kp RALT>\n            ;\n    )\n\n    //\n    // Mod+Tab application switcher - hold this down to keep menu open\n    //\n    mod_tab: mod_tab_switcher {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER>\n            , <&macro_tap &kp TAB>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    mod_tab_chord: mod_tab_switcher_chord {\n        compatible = \"zmk,behavior-macro-two-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <2>;\n        bindings\n            = <&macro_param_2to1>\n            , <&macro_press &mo MACRO_PLACEHOLDER>\n            , <&macro_param_1to1>\n            , <&macro_press &mod_tab MACRO_PLACEHOLDER>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &mod_tab MACRO_PLACEHOLDER>\n            , <&macro_param_2to1>\n            , <&macro_release &mo MACRO_PLACEHOLDER>\n            ;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Approximation of Pascal Getreuer's Select Word macro from QMK\n    // - https://getreuer.info/posts/keyboards/select-word/index.html\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // SELECT_WORD_DELAY defines how long the macro waits (milliseconds)\n    // after moving the cursor before it selects a word.  A larger delay\n    // may allow the macro to move to the next word upon each invocation.\n    //\n    #ifndef SELECT_WORD_DELAY\n    #define SELECT_WORD_DELAY 1\n    #endif\n\n    ZMK_MACRO(select_none,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp DOWN &kp UP &kp RIGHT &kp LEFT>;\n    )\n\n    //\n    // select a word (jumps to next word upon each successive invocation)\n    //\n    select_word: select_word {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&select_word_right>, <&select_word_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(select_word_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _W(RIGHT) &kp _W(LEFT) &kp _W(LS(RIGHT))>;\n    )\n    ZMK_MACRO(select_word_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _W(LEFT) &kp _W(RIGHT) &kp _W(LS(LEFT))>;\n    )\n\n    //\n    // extend current selection by one word\n    //\n    extend_word: extend_word {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&extend_word_right>, <&extend_word_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(extend_word_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _W(LS(RIGHT))>;\n    )\n    ZMK_MACRO(extend_word_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _W(LS(LEFT))>;\n    )\n\n    //\n    // select current line\n    //\n    select_line: select_line {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&select_line_right>, <&select_line_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(select_line_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _HOME &kp LS(_END)>;\n    )\n    ZMK_MACRO(select_line_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _END &kp LS(_HOME)>;\n    )\n\n    //\n    // extend current selection by one line\n    //\n    extend_line: extend_line {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&extend_line_right>, <&extend_line_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(extend_line_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LS(DOWN) &kp LS(_END)>;\n    )\n    ZMK_MACRO(extend_line_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LS(UP) &kp LS(_HOME)>;\n    )\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // World layer - international characters\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // UNICODE_TARGET_OS defines which operating system you're targeting\n    // for the UNICODE() preprocessor macro to be used on, since each OS\n    // has different shortcuts for typing Unicode characters as hexcodes.\n    //\n    // NOTE: You may need to enable Unicode hexadecimal input in your OS:\n    // - (macOS) https://sevenseacat.net/posts/2018/unicode-in-qmk-on-osx/\n    // - (Linux) https://help.ubuntu.com/stable/ubuntu-help/tips-specialchars.html.en#ctrlshiftu\n    // - (Windows) https://github.com/samhocevar/wincompose\n    //\n    // Specifically, Windows users should be running the WinCompose tool,\n    // which lets you type Unicode characters via hexadecimal codepoints.\n    //\n    #ifndef UNICODE_TARGET_OS\n    #define UNICODE_TARGET_OS OPERATING_SYSTEM\n    #endif\n\n    //\n    // UNICODE_TAP_DELAY defines how long the macro waits (milliseconds)\n    // between keystrokes while inputting the Unicode codepoint shortcut.\n    //\n    #ifndef UNICODE_TAP_DELAY\n    #define UNICODE_TAP_DELAY 1\n    #endif\n\n    //\n    // UNICODE_SEQ_DELAY defines how long the macro waits (milliseconds)\n    // between emitting Unicode codepoints in multi-codepoint characters.\n    //\n    #ifndef UNICODE_SEQ_DELAY\n    #define UNICODE_SEQ_DELAY 10\n    #endif\n\n    #define UNICODE(name, ...) \\\n        ZMK_MACRO(name, \\\n            wait-ms = <UNICODE_TAP_DELAY>; \\\n            tap-ms = <UNICODE_TAP_DELAY>; \\\n            bindings = __VA_ARGS__; \\\n        )\n\n    //\n    // UNICODE_SEQ_LINUX() specifies how Unicode hexadecimal codepoint\n    // keystrokes are transformed into Unicode characters under Linux.\n    //\n    #ifndef UNICODE_SEQ_LINUX\n    #define UNICODE_SEQ_LINUX(keystrokes) \\\n        <&macro_tap &kp LC(LS(U)) keystrokes &kp ENTER>\n    #endif\n\n    //\n    // UNICODE_SEQ_MACOS() specifies how Unicode hexadecimal codepoint\n    // keystrokes are transformed into Unicode characters under macOS.\n    //\n    #ifndef UNICODE_SEQ_MACOS\n    #define UNICODE_SEQ_MACOS(keystrokes) \\\n        <&macro_press &kp LALT> ,\\\n        <&macro_tap keystrokes> ,\\\n        <&macro_release &kp LALT>\n    #endif\n\n    //\n    // UNICODE_SEQ_WINDOWS() specifies how Unicode hexadecimal codepoint\n    // keystrokes are transformed into Unicode characters under Windows.\n    //\n    // If you've configured WinCompose to use a different trigger hotkey,\n    // such as F13 instead of the default RA(U) shortcut, simply override\n    // this definition to adapt all UNICODE() function calls accordingly.\n    //\n    #ifndef UNICODE_SEQ_WINDOWS\n    #define UNICODE_SEQ_WINDOWS(keystrokes) \\\n        <&macro_tap &kp RA(U) keystrokes &kp ENTER>\n    #endif\n\n    //\n    // COMPOSE_KEY_LINUX specifies the keycode for Compose key in Linux,\n    // which may be RALT by default but can be reconfigured as follows:\n    //\n    // $ setxkbmap -option compose:sclk # use ScrollLock as Compose key\n    //\n    // See xkeyboard-config(7) for possible choices for the Compose key:\n    // https://manpages.debian.org/stable/xkb-data/xkeyboard-config.7.en.html#Position_of_Compose_key\n    //\n    #ifndef COMPOSE_KEY_LINUX\n    #define COMPOSE_KEY_LINUX RALT\n    #endif\n\n    //\n    // COMPOSE_SEQ_LINUX() prefixes keystrokes with the Linux Compose key.\n    //\n    #ifndef COMPOSE_SEQ_LINUX\n    #define COMPOSE_SEQ_LINUX(keystrokes) \\\n        <&macro_tap &kp COMPOSE_KEY_LINUX keystrokes>\n    #endif\n\n    //\n    // COMPOSE_SEQ_MACOS() formats keystrokes for macOS character entry.\n    //\n    #ifndef COMPOSE_SEQ_MACOS\n    #define COMPOSE_SEQ_MACOS(keystrokes) \\\n        <&macro_tap keystrokes>\n    #endif\n\n    //\n    // COMPOSE_SEQ_WINDOWS() wraps keystrokes in Windows AltCode sequence.\n    //\n    #ifndef COMPOSE_SEQ_WINDOWS\n    #define COMPOSE_SEQ_WINDOWS(keystrokes) \\\n        <&macro_press &kp LALT>, \\\n        <&macro_tap keystrokes>, \\\n        <&macro_release &kp LALT>\n    #endif\n\n    //\n    // NOTE: edit the world.yaml file and run `rake` to generate this:\n    //\n\n    //\n    // codepoints\n    //\n    UNICODE(world_degree_sign, /* ° */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp B &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp B &kp N0)\n      #endif\n    )\n    UNICODE(world_section_sign, /* § */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp A &kp N7)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N7)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp A &kp N7)\n      #endif\n    )\n    UNICODE(world_paragraph_sign, /* ¶ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp B &kp N6)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp N6)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp B &kp N6)\n      #endif\n    )\n    UNICODE(world_o_ordinal, /* º */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp B &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp B &kp A)\n      #endif\n    )\n    UNICODE(world_a_ordinal, /* ª */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp A &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp A &kp A)\n      #endif\n    )\n    UNICODE(world_exclaim_left, /* ¡ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp A &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp A &kp N1)\n      #endif\n    )\n    UNICODE(world_question_left, /* ¿ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp B &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp B &kp F)\n      #endif\n    )\n    UNICODE(world_currency_crypto, /* ₿ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp B &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp B &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp B &kp F)\n      #endif\n    )\n    UNICODE(world_currency_cent, /* ¢ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp A &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp A &kp N2)\n      #endif\n    )\n    UNICODE(world_currency_sign, /* ¤ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp A &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp A &kp N4)\n      #endif\n    )\n    UNICODE(world_micro, /* µ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp B &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp B &kp N5)\n      #endif\n    )\n    UNICODE(world_szlig, /* ß */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp S &kp S)\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(S))\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N3)\n      #endif\n    )\n\n    //\n    // characters\n    //\n    UNICODE(world_c_cedilla_lower, /* ç */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp COMMA &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(C))\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N1)\n      #endif\n    )\n    UNICODE(world_c_cedilla_upper, /* Ç */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp COMMA &kp LS(C))\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(LS(C)))\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N9)\n      #endif\n    )\n    world_c_cedilla: world_c_cedilla {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_c_cedilla_lower>, <&world_c_cedilla_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_i_acute_lower, /* í */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp SQT &kp I)\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp I)\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N7)\n      #endif\n    )\n    UNICODE(world_i_acute_upper, /* Í */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp SQT &kp LS(I))\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp LS(I))\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N5)\n      #endif\n    )\n    world_i_acute: world_i_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_acute_lower>, <&world_i_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_i_diaeresis_lower, /* ï */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp F)\n      #endif\n    )\n    UNICODE(world_i_diaeresis_upper, /* Ï */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp F)\n      #endif\n    )\n    world_i_diaeresis: world_i_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_diaeresis_lower>, <&world_i_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_i_circumflex_lower, /* î */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp E)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp E)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp E)\n      #endif\n    )\n    UNICODE(world_i_circumflex_upper, /* Î */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp E)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp E)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp E)\n      #endif\n    )\n    world_i_circumflex: world_i_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_circumflex_lower>, <&world_i_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_i_grave_lower, /* ì */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp C)\n      #endif\n    )\n    UNICODE(world_i_grave_upper, /* Ì */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp C)\n      #endif\n    )\n    world_i_grave: world_i_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_grave_lower>, <&world_i_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_acute_lower, /* é */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp N9)\n      #endif\n    )\n    UNICODE(world_e_acute_upper, /* É */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp N9)\n      #endif\n    )\n    world_e_acute: world_e_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_acute_lower>, <&world_e_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_diaeresis_lower, /* ë */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp B)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp B)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp B)\n      #endif\n    )\n    UNICODE(world_e_diaeresis_upper, /* Ë */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp B)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp B)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp B)\n      #endif\n    )\n    world_e_diaeresis: world_e_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_diaeresis_lower>, <&world_e_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_circumflex_lower, /* ê */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp A)\n      #endif\n    )\n    UNICODE(world_e_circumflex_upper, /* Ê */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp A)\n      #endif\n    )\n    world_e_circumflex: world_e_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_circumflex_lower>, <&world_e_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_grave_lower, /* è */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp N8)\n      #endif\n    )\n    UNICODE(world_e_grave_upper, /* È */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp N8)\n      #endif\n    )\n    world_e_grave: world_e_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_grave_lower>, <&world_e_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_ae_lower, /* æ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp N6)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N6)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp N6)\n      #endif\n    )\n    UNICODE(world_e_ae_upper, /* Æ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp N6)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N6)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp N6)\n      #endif\n    )\n    world_e_ae: world_e_ae {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_ae_lower>, <&world_e_ae_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_acute_lower, /* á */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp N1)\n      #endif\n    )\n    UNICODE(world_a_acute_upper, /* Á */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp N1)\n      #endif\n    )\n    world_a_acute: world_a_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_acute_lower>, <&world_a_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_diaeresis_lower, /* ä */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp DQT &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8)\n      #endif\n    )\n    UNICODE(world_a_diaeresis_upper, /* Ä */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(A))\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(A))\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N6)\n      #endif\n    )\n    world_a_diaeresis: world_a_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_diaeresis_lower>, <&world_a_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_circumflex_lower, /* â */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp N2)\n      #endif\n    )\n    UNICODE(world_a_circumflex_upper, /* Â */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp N2)\n      #endif\n    )\n    world_a_circumflex: world_a_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_circumflex_lower>, <&world_a_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_grave_lower, /* à */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp N0)\n      #endif\n    )\n    UNICODE(world_a_grave_upper, /* À */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp N0)\n      #endif\n    )\n    world_a_grave: world_a_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_grave_lower>, <&world_a_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_tilde_lower, /* ã */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp N3)\n      #endif\n    )\n    UNICODE(world_a_tilde_upper, /* Ã */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp N3)\n      #endif\n    )\n    world_a_tilde: world_a_tilde {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_tilde_lower>, <&world_a_tilde_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_ring_lower, /* å */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp E &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp E &kp N5)\n      #endif\n    )\n    UNICODE(world_a_ring_upper, /* Å */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp C &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp C &kp N5)\n      #endif\n    )\n    world_a_ring: world_a_ring {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_ring_lower>, <&world_a_ring_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_y_acute_lower, /* ý */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp D)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp D)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp D)\n      #endif\n    )\n    UNICODE(world_y_acute_upper, /* Ý */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp D)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp D)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp D)\n      #endif\n    )\n    world_y_acute: world_y_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_y_acute_lower>, <&world_y_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_y_diaeresis_lower, /* ÿ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp F)\n      #endif\n    )\n    UNICODE(world_y_diaeresis_upper, /* Ÿ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp N7 &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N1 &kp N7 &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N1 &kp N7 &kp N8)\n      #endif\n    )\n    world_y_diaeresis: world_y_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_y_diaeresis_lower>, <&world_y_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_acute_lower, /* ó */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp N3)\n      #endif\n    )\n    UNICODE(world_o_acute_upper, /* Ó */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp N3)\n      #endif\n    )\n    world_o_acute: world_o_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_acute_lower>, <&world_o_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_diaeresis_lower, /* ö */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp DQT &kp O)\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp O)\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N6)\n      #endif\n    )\n    UNICODE(world_o_diaeresis_upper, /* Ö */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(O))\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(O))\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N4)\n      #endif\n    )\n    world_o_diaeresis: world_o_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_diaeresis_lower>, <&world_o_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_circumflex_lower, /* ô */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp N4)\n      #endif\n    )\n    UNICODE(world_o_circumflex_upper, /* Ô */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp N4)\n      #endif\n    )\n    world_o_circumflex: world_o_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_circumflex_lower>, <&world_o_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_grave_lower, /* ò */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp N2)\n      #endif\n    )\n    UNICODE(world_o_grave_upper, /* Ò */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp N2)\n      #endif\n    )\n    world_o_grave: world_o_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_grave_lower>, <&world_o_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_tilde_lower, /* õ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp N5)\n      #endif\n    )\n    UNICODE(world_o_tilde_upper, /* Õ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp N5)\n      #endif\n    )\n    world_o_tilde: world_o_tilde {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_tilde_lower>, <&world_o_tilde_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_slash_lower, /* ø */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp N8)\n      #endif\n    )\n    UNICODE(world_o_slash_upper, /* Ø */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp N8)\n      #endif\n    )\n    world_o_slash: world_o_slash {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_slash_lower>, <&world_o_slash_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_u_acute_lower, /* ú */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp A)\n      #endif\n    )\n    UNICODE(world_u_acute_upper, /* Ú */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp A)\n      #endif\n    )\n    world_u_acute: world_u_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_acute_lower>, <&world_u_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_u_diaeresis_lower, /* ü */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp DQT &kp U)\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp U)\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N2)\n      #endif\n    )\n    UNICODE(world_u_diaeresis_upper, /* Ü */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(U))\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(U))\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N0)\n      #endif\n    )\n    world_u_diaeresis: world_u_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_diaeresis_lower>, <&world_u_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_u_circumflex_lower, /* û */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp B)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp B)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp B)\n      #endif\n    )\n    UNICODE(world_u_circumflex_upper, /* Û */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp B)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp B)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp B)\n      #endif\n    )\n    world_u_circumflex: world_u_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_circumflex_lower>, <&world_u_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_u_grave_lower, /* ù */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp N9)\n      #endif\n    )\n    UNICODE(world_u_grave_upper, /* Ù */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp N9)\n      #endif\n    )\n    world_u_grave: world_u_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_grave_lower>, <&world_u_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_n_tilde_lower, /* ñ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp F &kp N1)\n      #endif\n    )\n    UNICODE(world_n_tilde_upper, /* Ñ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp D &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp D &kp N1)\n      #endif\n    )\n    world_n_tilde: world_n_tilde {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_n_tilde_lower>, <&world_n_tilde_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_angle_lower, /* ‹ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N3 &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N3 &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N3 &kp N9)\n      #endif\n    )\n    UNICODE(world_quotes_left_angle_upper, /* « */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp A &kp B)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp B)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp A &kp B)\n      #endif\n    )\n    world_quotes_left_angle: world_quotes_left_angle {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_angle_lower>, <&world_quotes_left_angle_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_curly_lower, /* ‘ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp N8)\n      #endif\n    )\n    UNICODE(world_quotes_left_curly_upper, /* “ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp C)\n      #endif\n    )\n    world_quotes_left_curly: world_quotes_left_curly {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_curly_lower>, <&world_quotes_left_curly_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_low_lower, /* ‚ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp A)\n      #endif\n    )\n    UNICODE(world_quotes_left_low_upper, /* „ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp E)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp E)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp E)\n      #endif\n    )\n    world_quotes_left_low: world_quotes_left_low {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_low_lower>, <&world_quotes_left_low_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_corner1_lower, /* 「 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N3 &kp N0 &kp N0 &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N3 &kp N0 &kp N0 &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N3 &kp N0 &kp N0 &kp C)\n      #endif\n    )\n    UNICODE(world_quotes_left_corner1_upper, /* ﹁ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N4 &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N4 &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N4 &kp N1)\n      #endif\n    )\n    world_quotes_left_corner1: world_quotes_left_corner1 {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_corner1_lower>, <&world_quotes_left_corner1_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_corner2_lower, /* 『 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N3 &kp N0 &kp N0 &kp E)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N3 &kp N0 &kp N0 &kp E)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N3 &kp N0 &kp N0 &kp E)\n      #endif\n    )\n    UNICODE(world_quotes_left_corner2_upper, /* ﹃ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N4 &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N4 &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N4 &kp N3)\n      #endif\n    )\n    world_quotes_left_corner2: world_quotes_left_corner2 {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_corner2_lower>, <&world_quotes_left_corner2_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_grave, /* ` */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N6 &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp N6 &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp N6 &kp N0)\n      #endif\n    )\n    UNICODE(world_quotes_right_angle_lower, /* › */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N3 &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N3 &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N3 &kp A)\n      #endif\n    )\n    UNICODE(world_quotes_right_angle_upper, /* » */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp B &kp B)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp B)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp B &kp B)\n      #endif\n    )\n    world_quotes_right_angle: world_quotes_right_angle {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_angle_lower>, <&world_quotes_right_angle_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_right_curly_lower, /* ’ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp N9)\n      #endif\n    )\n    UNICODE(world_quotes_right_curly_upper, /* ” */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp D)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp D)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp D)\n      #endif\n    )\n    world_quotes_right_curly: world_quotes_right_curly {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_curly_lower>, <&world_quotes_right_curly_upper>;\n        mods = <MOD_LSFT>;\n    };\n    world_quotes_right_low: world_quotes_right_low {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_low_lower>, <&world_quotes_left_low_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_right_corner1_lower, /* 」 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N3 &kp N0 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N3 &kp N0 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N3 &kp N0 &kp N0 &kp D)\n      #endif\n    )\n    UNICODE(world_quotes_right_corner1_upper, /* ﹂ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N4 &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N4 &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N4 &kp N2)\n      #endif\n    )\n    world_quotes_right_corner1: world_quotes_right_corner1 {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_corner1_lower>, <&world_quotes_right_corner1_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_right_corner2_lower, /* 』 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N3 &kp N0 &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N3 &kp N0 &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N3 &kp N0 &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(world_quotes_right_corner2_upper, /* ﹄ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N4 &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N4 &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N4 &kp N4)\n      #endif\n    )\n    world_quotes_right_corner2: world_quotes_right_corner2 {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_corner2_lower>, <&world_quotes_right_corner2_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_right_grave, /* ´ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp B &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp B &kp N4)\n      #endif\n    )\n    UNICODE(world_currency_dollar_lower, /* $ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp N2 &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp N2 &kp N4)\n      #endif\n    )\n    world_currency_dollar: world_currency_dollar {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_dollar_lower>, <&world_currency_cent>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_currency_yen, /* ¥ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp A &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp A &kp N5)\n      #endif\n    )\n    UNICODE(world_currency_euro, /* € */\n      #if UNICODE_TARGET_OS == 'L'\n        COMPOSE_SEQ_LINUX(&kp E &kp EQUAL)\n      #elif UNICODE_TARGET_OS == 'M'\n        COMPOSE_SEQ_MACOS(&kp LA(LS(N2)))\n      #elif UNICODE_TARGET_OS == 'W'\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8)\n      #endif\n    )\n    UNICODE(world_currency_won, /* ₩ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp A &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp A &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp A &kp N9)\n      #endif\n    )\n    UNICODE(world_currency_pound, /* £ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp A &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N0 &kp N0 &kp A &kp N3)\n      #endif\n    )\n    world_currency_generic: world_currency_generic {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_sign>, <&world_currency_crypto>;\n        mods = <MOD_LSFT>;\n    };\n\n    //\n    // transforms\n    //\n    world_i_base: world_i_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_acute>, <&world_i_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_i_LCTL: world_i_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_diaeresis>, <&world_i_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_i_RCTL: world_i_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_circumflex>, <&world_i_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_e_base: world_e_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_acute>, <&world_e_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_e_RALT: world_e_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_ae>, <&world_e_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_e_LCTL: world_e_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_diaeresis>, <&world_e_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_e_RCTL: world_e_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_circumflex>, <&world_e_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_a_base: world_a_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_acute>, <&world_a_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_a_LALT: world_a_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_tilde>, <&world_a_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_a_RALT: world_a_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_ring>, <&world_a_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_a_LCTL: world_a_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_diaeresis>, <&world_a_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_a_RCTL: world_a_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_circumflex>, <&world_a_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_y_base: world_y_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_y_acute>, <&world_y_diaeresis>;\n        mods = <(MOD_LCTL)>;\n    };\n    world_o_base: world_o_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_acute>, <&world_o_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_o_LALT: world_o_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_tilde>, <&world_o_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_o_RALT: world_o_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_slash>, <&world_o_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_o_LCTL: world_o_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_diaeresis>, <&world_o_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_o_RCTL: world_o_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_circumflex>, <&world_o_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_u_base: world_u_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_acute>, <&world_u_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_u_LCTL: world_u_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_diaeresis>, <&world_u_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_u_RCTL: world_u_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_circumflex>, <&world_u_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_quotes_left_base: world_quotes_left_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_angle>, <&world_quotes_left_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_left_LALT: world_quotes_left_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_corner1>, <&world_quotes_left_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_left_RALT: world_quotes_left_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_corner2>, <&world_quotes_left_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_left_LCTL: world_quotes_left_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_curly>, <&world_quotes_left_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_left_RCTL: world_quotes_left_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_low>, <&world_quotes_left_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_quotes_right_base: world_quotes_right_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_angle>, <&world_quotes_right_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_right_LALT: world_quotes_right_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_corner1>, <&world_quotes_right_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_right_RALT: world_quotes_right_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_corner2>, <&world_quotes_right_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_right_LCTL: world_quotes_right_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_curly>, <&world_quotes_right_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_right_RCTL: world_quotes_right_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_low>, <&world_quotes_right_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_currency_base: world_currency_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_dollar>, <&world_currency_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_currency_LALT: world_currency_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_yen>, <&world_currency_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_currency_RALT: world_currency_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_won>, <&world_currency_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_currency_LCTL: world_currency_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_euro>, <&world_currency_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_currency_RCTL: world_currency_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_pound>, <&world_currency_generic>;\n        mods = <(MOD_RSFT)>;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Emoji layer - modern age pictograms\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // EMOJI_GENDER_SIGN_PRESET defines an Emoji gender sign for use as a\n    // convenient inward-rolling shortcut on the home row of the layer.\n    //\n    #ifndef EMOJI_GENDER_SIGN_PRESET\n    #define EMOJI_GENDER_SIGN_PRESET 'N' // neutral\n    //#define EMOJI_GENDER_SIGN_PRESET 'M' // male\n    //#define EMOJI_GENDER_SIGN_PRESET 'F' // female\n    #endif\n\n    //\n    // EMOJI_SKIN_TONE_PRESET defines an Emoji skin tone for use as a\n    // convenient inward-rolling shortcut on the home row of the layer.\n    //\n    #ifndef EMOJI_SKIN_TONE_PRESET\n    #define EMOJI_SKIN_TONE_PRESET 'N' // neutral\n    //#define EMOJI_SKIN_TONE_PRESET 'L' // light_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 'l' // medium_light_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 'M' // medium_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 'd' // medium_dark_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 'D' // dark_skin_tone\n    #endif\n\n    //\n    // EMOJI_HAIR_STYLE_PRESET defines an Emoji hair style for use as a\n    // convenient inward-rolling shortcut on the home row of the layer.\n    //\n    #ifndef EMOJI_HAIR_STYLE_PRESET\n    #define EMOJI_HAIR_STYLE_PRESET 'N' // neutral\n    //#define EMOJI_HAIR_STYLE_PRESET 'B' // bald\n    //#define EMOJI_HAIR_STYLE_PRESET 'R' // red_hair\n    //#define EMOJI_HAIR_STYLE_PRESET 'C' // curly_hair\n    //#define EMOJI_HAIR_STYLE_PRESET 'W' // white_hair\n    #endif\n\n    //\n    // NOTE: edit the emoji.yaml file and run `rake` to generate this:\n    //\n\n    //\n    // codepoints\n    //\n    UNICODE(emoji_zwj, /* ‍ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N0 &kp D)\n      #endif\n    )\n    UNICODE(emoji_male_sign, /* ♂️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N4 &kp N2), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N4 &kp N2), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N4 &kp N2), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_female_sign, /* ♀️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N4 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N4 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N4 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_right_arrow, /* ➡️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp A &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp A &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp A &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_left_arrow, /* ⬅️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp B &kp N0 &kp N5), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp B &kp N0 &kp N5), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp B &kp N0 &kp N5), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_rainbow, /* 🌈 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_cloudy, /* ️☁️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N0 &kp N1), UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N0 &kp N1), UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N0 &kp N1), UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_mostly_cloudy, /* 🌥 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N2 &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N2 &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N2 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_partly_cloudy, /* ⛅ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp C &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp C &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp C &kp N5)\n      #endif\n    )\n    UNICODE(emoji_mostly_sunny, /* ️🌤️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N2 &kp N4), UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N2 &kp N4), UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N2 &kp N4), UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_sunny, /* ☀️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N0 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N0 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N0 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_sunrise, /* 🌅 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_sunrise_mountains, /* 🌄 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N4)\n      #endif\n    )\n    UNICODE(emoji_cityscape, /* ️🏙️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp D &kp N9), UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp D &kp N9), UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp D &kp N9), UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_cityscape_dusk, /* ️🌇 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N7)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N7)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_cityscape_night, /* 🌃 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_light_skin_tone, /* 🏻 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp B)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp B)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp B)\n      #endif\n    )\n    UNICODE(emoji_medium_light_skin_tone, /* 🏼 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp C)\n      #endif\n    )\n    UNICODE(emoji_medium_skin_tone, /* 🏽 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp D)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp D)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp D)\n      #endif\n    )\n    UNICODE(emoji_medium_dark_skin_tone, /* 🏾 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp E)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp E)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp E)\n      #endif\n    )\n    UNICODE(emoji_dark_skin_tone, /* 🏿 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp F)\n      #endif\n    )\n    UNICODE(emoji_baby_bottle, /* 🍼 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N7 &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N7 &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N7 &kp C)\n      #endif\n    )\n    UNICODE(emoji_baby, /* 👶 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N7 &kp N6)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N7 &kp N6)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N7 &kp N6)\n      #endif\n    )\n    UNICODE(emoji_boy, /* 👦 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N6 &kp N6)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N6 &kp N6)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N6 &kp N6)\n      #endif\n    )\n    UNICODE(emoji_girl, /* 👧 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N6 &kp N7)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N6 &kp N7)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N6 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_man, /* 👨 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N6 &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N6 &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N6 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_woman, /* 👩 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N6 &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N6 &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N6 &kp N9)\n      #endif\n    )\n    UNICODE(emoji_old_man, /* 👴 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N7 &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N7 &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N7 &kp N4)\n      #endif\n    )\n    UNICODE(emoji_old_woman, /* 👵 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N7 &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N7 &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N7 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_white_hair, /* 🦳 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp B &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp B &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp B &kp N3)\n      #endif\n    )\n    UNICODE(emoji_curly_hair, /* 🦱 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp B &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp B &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp B &kp N1)\n      #endif\n    )\n    UNICODE(emoji_red_hair, /* 🦰 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp B &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp B &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp B &kp N0)\n      #endif\n    )\n    UNICODE(emoji_bald, /* 🦲 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp B &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp B &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp B &kp N2)\n      #endif\n    )\n    UNICODE(emoji_new_moon, /* 🌑 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N1)\n      #endif\n    )\n    UNICODE(emoji_waxing_crescent_moon, /* 🌒 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N2)\n      #endif\n    )\n    UNICODE(emoji_first_quarter_moon, /* 🌓 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_waxing_gibbous_moon, /* 🌔 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N4)\n      #endif\n    )\n    UNICODE(emoji_full_moon, /* 🌕 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_waning_gibbous_moon, /* 🌖 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N6)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N6)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N6)\n      #endif\n    )\n    UNICODE(emoji_last_quarter_moon, /* 🌗 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N7)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N7)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_waning_crescent_moon, /* 🌘 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_tada, /* 🎉 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N8 &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N8 &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N8 &kp N9)\n      #endif\n    )\n    UNICODE(emoji_heart, /* ️❤️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N6 &kp N4), UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N6 &kp N4), UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N6 &kp N4), UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_fire, /* 🔥 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N5 &kp N2 &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N5 &kp N2 &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N5 &kp N2 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_muscle, /* 💪 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp A &kp A)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp A &kp A)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp A &kp A)\n      #endif\n    )\n    UNICODE(emoji_person_climbing, /* 🧗 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp D &kp N7)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp D &kp N7)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp D &kp N7)\n      #endif\n    )\n    UNICODE(emoji_lab_coat, /* 🥼 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N7 &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N7 &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N7 &kp C)\n      #endif\n    )\n    UNICODE(emoji_rocket, /* 🚀 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #endif\n    )\n    UNICODE(emoji_joy, /* 😂 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp N2)\n      #endif\n    )\n    UNICODE(emoji_rofl, /* 🤣 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N2 &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N2 &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N2 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_star_struck, /* 🤩 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N2 &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N2 &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N2 &kp N9)\n      #endif\n    )\n    UNICODE(emoji_love_struck, /* 😍 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp D)\n      #endif\n    )\n    UNICODE(emoji_saluting_face, /* 🫡 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp A &kp E &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp A &kp E &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp A &kp E &kp N1)\n      #endif\n    )\n    UNICODE(emoji_shocked_face, /* 🤯 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N2 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N2 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N2 &kp F)\n      #endif\n    )\n    UNICODE(emoji_cold_sweat, /* 😰 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N3 &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N3 &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N3 &kp N0)\n      #endif\n    )\n    UNICODE(emoji_monocle_face, /* 🧐 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp D &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp D &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp D &kp N0)\n      #endif\n    )\n    UNICODE(emoji_snap_fingers, /* 🫰 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp A &kp F &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp A &kp F &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp A &kp F &kp N0)\n      #endif\n    )\n    UNICODE(emoji_ok_hand, /* 👌 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N4 &kp C)\n      #endif\n    )\n    UNICODE(emoji_pray, /* 🙏 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp F)\n      #endif\n    )\n    UNICODE(emoji_sweat_smile, /* 😅 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_disappointed, /* 😞 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N1 &kp E)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N1 &kp E)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N1 &kp E)\n      #endif\n    )\n    UNICODE(emoji_thinking, /* 🤔 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N1 &kp N4)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N1 &kp N4)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N1 &kp N4)\n      #endif\n    )\n    UNICODE(emoji_person_tipping_hand, /* 💁 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N8 &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N8 &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N8 &kp N1)\n      #endif\n    )\n    UNICODE(emoji_person_gesturing_ok, /* 🙆 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N6)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N6)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N6)\n      #endif\n    )\n    UNICODE(emoji_person_bowing, /* 🙇 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N7)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N7)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_person_raising_hand, /* 🙋 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp B)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp B)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp B)\n      #endif\n    )\n    UNICODE(emoji_person_gesturing_no, /* 🙅 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_person_shrugging, /* 🤷 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N3 &kp N7)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N3 &kp N7)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N3 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_checkoff, /* ✅ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N0 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_100, /* 💯 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp A &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp A &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp A &kp F)\n      #endif\n    )\n    UNICODE(emoji_warning, /* ⚠️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp A &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp A &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp A &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_x, /* ❌ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N4 &kp C)\n      #endif\n    )\n    UNICODE(emoji_question, /* ❓ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N5 &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N5 &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N5 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_astronaut, /* 🧑‍🚀 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp D &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N0 &kp D), UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp D &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N0 &kp D), UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp D &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N0 &kp D), UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #endif\n    )\n    UNICODE(emoji_nerd, /* 🤓 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N1 &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N1 &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N1 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_sparkles, /* ✨ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N2 &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N2 &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N2 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_raised_hands, /* 🙌 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp C)\n      #endif\n    )\n    UNICODE(emoji_point_up, /* ☝️ */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N1 &kp D), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N1 &kp D), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N1 &kp D), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_thumbs_up, /* 👍 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N4 &kp D)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N4 &kp D)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N4 &kp D)\n      #endif\n    )\n\n    //\n    // characters\n    //\n    emoji_moon_complete: emoji_moon_complete {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_new_moon>, <&emoji_full_moon>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_moon_gibbous: emoji_moon_gibbous {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_waning_gibbous_moon>, <&emoji_waxing_gibbous_moon>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_moon_quarter: emoji_moon_quarter {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_last_quarter_moon>, <&emoji_first_quarter_moon>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_moon_crescent: emoji_moon_crescent {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_waning_crescent_moon>, <&emoji_waxing_crescent_moon>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_face_smile_up, /* 🙂 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N2)\n      #endif\n    )\n    UNICODE(emoji_face_smile_down, /* 🙃 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N3)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N3)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N3)\n      #endif\n    )\n    emoji_face_smile: emoji_face_smile {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_face_smile_up>, <&emoji_face_smile_down>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_face_laugh: emoji_face_laugh {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_joy>, <&emoji_rofl>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_face_eyes: emoji_face_eyes {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_star_struck>, <&emoji_love_struck>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_face_joke_wink, /* 😉 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp N9)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp N9)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp N9)\n      #endif\n    )\n    UNICODE(emoji_face_joke_tounge, /* 😜 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N1 &kp C)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N1 &kp C)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N1 &kp C)\n      #endif\n    )\n    emoji_face_joke: emoji_face_joke {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_face_joke_wink>, <&emoji_face_joke_tounge>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_face_fear_scared, /* 😨 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N2 &kp N8)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N2 &kp N8)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N2 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_face_fear_scream, /* 😱 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N3 &kp N1)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N3 &kp N1)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N3 &kp N1)\n      #endif\n    )\n    emoji_face_fear: emoji_face_fear {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_face_fear_scared>, <&emoji_face_fear_scream>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_face_surprise_dizzy, /* 😵 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N3 &kp N5)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N3 &kp N5)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N3 &kp N5)\n      #endif\n    )\n    emoji_face_surprise: emoji_face_surprise {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_shocked_face>, <&emoji_face_surprise_dizzy>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_gesture_attention_wave, /* 👋 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N4 &kp B)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N4 &kp B)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N4 &kp B)\n      #endif\n    )\n    emoji_gesture_attention: emoji_gesture_attention {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_snap_fingers>, <&emoji_gesture_attention_wave>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_gesture_approval_cool, /* 😎 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp E)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp E)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp E)\n      #endif\n    )\n    emoji_gesture_approval: emoji_gesture_approval {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_ok_hand>, <&emoji_gesture_approval_cool>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_gesture_gratitude: emoji_gesture_gratitude {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_pray>, <&emoji_saluting_face>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_gesture_anxiety: emoji_gesture_anxiety {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_sweat_smile>, <&emoji_cold_sweat>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_gesture_despair_cry, /* 😢 */\n      #if UNICODE_TARGET_OS == 'L'\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N2 &kp N2)\n      #elif UNICODE_TARGET_OS == 'M'\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N2 &kp N2)\n      #elif UNICODE_TARGET_OS == 'W'\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N2 &kp N2)\n      #endif\n    )\n    emoji_gesture_despair: emoji_gesture_despair {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_disappointed>, <&emoji_gesture_despair_cry>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_gesture_curious: emoji_gesture_curious {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_thinking>, <&emoji_monocle_face>;\n        mods = <MOD_LSFT>;\n    };\n};\n/*HACK*/};\n#if EMOJI_GENDER_SIGN_PRESET == 'N'\n    emoji_gender_sign_preset: &none {};\n#elif EMOJI_GENDER_SIGN_PRESET == 'M'\n    emoji_gender_sign_preset: &emoji_male_sign {};\n#elif EMOJI_GENDER_SIGN_PRESET == 'F'\n    emoji_gender_sign_preset: &emoji_female_sign {};\n#endif\n\n#if EMOJI_SKIN_TONE_PRESET == 'N'\n    emoji_skin_tone_preset: &none {};\n#elif EMOJI_SKIN_TONE_PRESET == 'L'\n    emoji_skin_tone_preset: &emoji_light_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 'l'\n    emoji_skin_tone_preset: &emoji_medium_light_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 'M'\n    emoji_skin_tone_preset: &emoji_medium_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 'd'\n    emoji_skin_tone_preset: &emoji_medium_dark_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 'D'\n    emoji_skin_tone_preset: &emoji_dark_skin_tone {};\n#endif\n\n#if EMOJI_HAIR_STYLE_PRESET == 'N'\n    emoji_hair_style_preset: &none {};\n#elif EMOJI_HAIR_STYLE_PRESET == 'B'\n    emoji_hair_style_preset: &emoji_bald {};\n#elif EMOJI_HAIR_STYLE_PRESET == 'R'\n    emoji_hair_style_preset: &emoji_red_hair {};\n#elif EMOJI_HAIR_STYLE_PRESET == 'C'\n    emoji_hair_style_preset: &emoji_curly_hair {};\n#elif EMOJI_HAIR_STYLE_PRESET == 'W'\n    emoji_hair_style_preset: &emoji_white_hair {};\n#endif\n/*HACK*//{\n\n//////////////////////////////////////////////////////////////////////////\n//\n// Mouse keys (control mouse via keyboard) -- requires PR23 beta firmware:\n// select \"community.pr23.mouse-keys\" from the drop-down menu located at\n// Glove80 Layout Editor > Settings > Advanced Settings > Firmware Version\n//\n// - https://github.com/moergo-sc/zmk/pull/23\n// - https://gist.github.com/krissen/dd27082e7ab0575619c7a31f4d2ec7ae\n// - https://github.com/zmkfirmware/zmk/compare/main...urob:zmk:mouse-3.2\n//\n//////////////////////////////////////////////////////////////////////////\n\n//\n// MOUSE_MOTION_DELAY defines how long to wait (milliseconds) before starting\n// to move the mouse pointer.\n//\n#ifndef MOUSE_MOTION_DELAY\n#define MOUSE_MOTION_DELAY 0\n#endif\n\n//\n// MOUSE_MOTION_ACCELERATION_EXPONENT sets how the mouse pointer accelerates:\n//\n// acceleration exponent 0: uniform speed\n// acceleration exponent 1: uniform acceleration\n// acceleration exponent 2: uniform jerk\n//\n#ifndef MOUSE_MOTION_ACCELERATION_EXPONENT\n#define MOUSE_MOTION_ACCELERATION_EXPONENT 1\n#endif\n\n//\n// MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED defines how long to wait (milliseconds)\n// before the mouse pointer speed is suddenly boosted to the maximum value.\n//\n#ifndef MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED\n#define MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED 300\n#endif\n\n//\n// MOUSE_MOTION_MAXIMUM_SPEED defines how quickly the mouse pointer can move.\n//\n#ifndef MOUSE_MOTION_MAXIMUM_SPEED\n#define MOUSE_MOTION_MAXIMUM_SPEED 600\n#endif\n\n//\n// MOUSE_SCROLL_DELAY defines how long to wait (milliseconds) before starting\n// to move the mouse pointer.\n//\n#ifndef MOUSE_SCROLL_DELAY\n#define MOUSE_SCROLL_DELAY 0\n#endif\n\n//\n// MOUSE_SCROLL_ACCELERATION_EXPONENT sets how the mouse pointer accelerates:\n//\n// acceleration exponent 0: uniform speed\n// acceleration exponent 1: uniform acceleration\n// acceleration exponent 2: uniform jerk\n//\n#ifndef MOUSE_SCROLL_ACCELERATION_EXPONENT\n#define MOUSE_SCROLL_ACCELERATION_EXPONENT 0\n#endif\n\n//\n// MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED defines how long to wait (milliseconds)\n// before the mouse pointer speed is suddenly boosted to the maximum value.\n//\n#ifndef MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED\n#define MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED 300\n#endif\n\n//\n// MOUSE_SCROLL_MAXIMUM_SPEED defines how quickly the mouse wheel can scroll.\n//\n#ifndef MOUSE_SCROLL_MAXIMUM_SPEED\n#define MOUSE_SCROLL_MAXIMUM_SPEED 10\n#endif\n/*HACK*/};\n#if __has_include(<zmk/events/mouse_tick.h>)\n    // ==== MOUSE-KEY <section begins> ====\n    #define ZMK_MOUSE_DEFAULT_MOVE_VAL MOUSE_MOTION_MAXIMUM_SPEED\n    #define ZMK_MOUSE_DEFAULT_SCRL_VAL MOUSE_SCROLL_MAXIMUM_SPEED\n    #include <dt-bindings/zmk/mouse.h>\n    &mmv {\n      delay-ms = <MOUSE_MOTION_DELAY>;\n      acceleration-exponent = <MOUSE_MOTION_ACCELERATION_EXPONENT>;\n      time-to-max-speed-ms = <MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED>;\n    };\n    &msc {\n      delay-ms = <MOUSE_SCROLL_DELAY>;\n      acceleration-exponent = <MOUSE_SCROLL_ACCELERATION_EXPONENT>;\n      time-to-max-speed-ms = <MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED>;\n    };\n    // ==== MOUSE-KEY <section ends> =====\n#else\n    #define mkp none\n    #define mmv none\n    #define msc none\n    #define LCLK\n    #define MCLK\n    #define RCLK\n    #define MB1\n    #define MB2\n    #define MB3\n    #define MB4\n    #define MB5\n    #define MB6\n    #define MB7\n    #define MB8\n    #define MOVE_UP\n    #define MOVE_DOWN\n    #define MOVE_LEFT\n    #define MOVE_RIGHT\n    #define SCRL_UP\n    #define SCRL_DOWN\n    #define SCRL_LEFT\n    #define SCRL_RIGHT\n#endif\n/*HACK*//{\n",
  "custom_devicetree": "",
  "config_parameters": []
}